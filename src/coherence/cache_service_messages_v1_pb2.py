# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cache_service_messages_v1.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import coherence.common_messages_v1_pb2 as common__messages__v1__pb2
from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1f\x63\x61\x63he_service_messages_v1.proto\x12\x12\x63oherence.cache.v1\x1a\x18\x63ommon_messages_v1.proto\x1a\x19google/protobuf/any.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xa6\x01\n\x11NamedCacheRequest\x12\x37\n\x04type\x18\x01 \x01(\x0e\x32).coherence.cache.v1.NamedCacheRequestType\x12\x14\n\x07\x63\x61\x63heId\x18\x02 \x01(\x05H\x00\x88\x01\x01\x12*\n\x07message\x18\x03 \x01(\x0b\x32\x14.google.protobuf.AnyH\x01\x88\x01\x01\x42\n\n\x08_cacheIdB\n\n\x08_message\"\x8d\x01\n\x12NamedCacheResponse\x12\x0f\n\x07\x63\x61\x63heId\x18\x01 \x01(\x05\x12.\n\x04type\x18\x02 \x01(\x0e\x32 .coherence.cache.v1.ResponseType\x12*\n\x07message\x18\x03 \x01(\x0b\x32\x14.google.protobuf.AnyH\x00\x88\x01\x01\x42\n\n\x08_message\"#\n\x12\x45nsureCacheRequest\x12\r\n\x05\x63\x61\x63he\x18\x01 \x01(\t\"B\n\nPutRequest\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\r\n\x05value\x18\x02 \x01(\x0c\x12\x10\n\x03ttl\x18\x03 \x01(\x03H\x00\x88\x01\x01\x42\x06\n\x04_ttl\"b\n\rPutAllRequest\x12\x37\n\x07\x65ntries\x18\x01 \x03(\x0b\x32&.coherence.common.v1.BinaryKeyAndValue\x12\x10\n\x03ttl\x18\x02 \x01(\x03H\x00\x88\x01\x01\x42\x06\n\x04_ttl\"M\n\x15ReplaceMappingRequest\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x12\x15\n\rpreviousValue\x18\x02 \x01(\x0c\x12\x10\n\x08newValue\x18\x03 \x01(\x0c\"v\n\x0cIndexRequest\x12\x0b\n\x03\x61\x64\x64\x18\x01 \x01(\x08\x12\x11\n\textractor\x18\x02 \x01(\x0c\x12\x13\n\x06sorted\x18\x03 \x01(\x08H\x00\x88\x01\x01\x12\x17\n\ncomparator\x18\x04 \x01(\x0cH\x01\x88\x01\x01\x42\t\n\x07_sortedB\r\n\x0b_comparator\"|\n\x0cKeysOrFilter\x12\r\n\x03key\x18\x01 \x01(\x0cH\x00\x12<\n\x04keys\x18\x02 \x01(\x0b\x32,.coherence.common.v1.CollectionOfBytesValuesH\x00\x12\x10\n\x06\x66ilter\x18\x03 \x01(\x0cH\x00\x42\r\n\x0bkeyOrFilter\"=\n\x0bKeyOrFilter\x12\r\n\x03key\x18\x01 \x01(\x0cH\x00\x12\x10\n\x06\x66ilter\x18\x02 \x01(\x0cH\x00\x42\r\n\x0bkeyOrFilter\"]\n\x0e\x45xecuteRequest\x12\r\n\x05\x61gent\x18\x01 \x01(\x0c\x12\x33\n\x04keys\x18\x03 \x01(\x0b\x32 .coherence.cache.v1.KeysOrFilterH\x00\x88\x01\x01\x42\x07\n\x05_keys\"V\n\x0cQueryRequest\x12\x13\n\x06\x66ilter\x18\x01 \x01(\x0cH\x00\x88\x01\x01\x12\x17\n\ncomparator\x18\x02 \x01(\x0cH\x01\x88\x01\x01\x42\t\n\x07_filterB\r\n\x0b_comparator\"\xc9\x01\n\x12MapListenerRequest\x12\x11\n\tsubscribe\x18\x01 \x01(\x08\x12\x39\n\x0bkeyOrFilter\x18\x02 \x01(\x0b\x32\x1f.coherence.cache.v1.KeyOrFilterH\x00\x88\x01\x01\x12\x10\n\x08\x66ilterId\x18\x03 \x01(\x03\x12\x0c\n\x04lite\x18\x04 \x01(\x08\x12\x13\n\x0bsynchronous\x18\x05 \x01(\x08\x12\x0f\n\x07priming\x18\x06 \x01(\x08\x12\x0f\n\x07trigger\x18\x07 \x01(\x0c\x42\x0e\n\x0c_keyOrFilter\"\xd5\x02\n\x0fMapEventMessage\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0b\n\x03key\x18\x02 \x01(\x0c\x12\x10\n\x08newValue\x18\x03 \x01(\x0c\x12\x10\n\x08oldValue\x18\x04 \x01(\x0c\x12T\n\x13transformationState\x18\x05 \x01(\x0e\x32\x37.coherence.cache.v1.MapEventMessage.TransformationState\x12\x11\n\tfilterIds\x18\x06 \x03(\x03\x12\x11\n\tsynthetic\x18\x07 \x01(\x08\x12\x0f\n\x07priming\x18\x08 \x01(\x08\x12\x0f\n\x07\x65xpired\x18\t \x01(\x08\x12\x15\n\rversionUpdate\x18\n \x01(\x08\"P\n\x13TransformationState\x12\x15\n\x11NON_TRANSFORMABLE\x10\x00\x12\x11\n\rTRANSFORMABLE\x10\x01\x12\x0f\n\x0bTRANSFORMED\x10\x02*\xbd\x03\n\x15NamedCacheRequestType\x12\x0b\n\x07Unknown\x10\x00\x12\x0f\n\x0b\x45nsureCache\x10\x01\x12\r\n\tAggregate\x10\x02\x12\t\n\x05\x43lear\x10\x03\x12\x11\n\rContainsEntry\x10\x04\x12\x0f\n\x0b\x43ontainsKey\x10\x05\x12\x11\n\rContainsValue\x10\x06\x12\x0b\n\x07\x44\x65stroy\x10\x07\x12\x0b\n\x07IsEmpty\x10\x08\x12\x0b\n\x07IsReady\x10\t\x12\x07\n\x03Get\x10\n\x12\n\n\x06GetAll\x10\x0b\x12\t\n\x05Index\x10\x0c\x12\n\n\x06Invoke\x10\r\x12\x0f\n\x0bMapListener\x10\x0e\x12\x11\n\rPageOfEntries\x10\x0f\x12\x0e\n\nPageOfKeys\x10\x10\x12\x07\n\x03Put\x10\x11\x12\n\n\x06PutAll\x10\x12\x12\x0f\n\x0bPutIfAbsent\x10\x13\x12\x10\n\x0cQueryEntries\x10\x14\x12\r\n\tQueryKeys\x10\x15\x12\x0f\n\x0bQueryValues\x10\x16\x12\n\n\x06Remove\x10\x17\x12\x11\n\rRemoveMapping\x10\x18\x12\x0b\n\x07Replace\x10\x19\x12\x12\n\x0eReplaceMapping\x10\x1a\x12\x08\n\x04Size\x10\x1b\x12\x0c\n\x08Truncate\x10\x1c*G\n\x0cResponseType\x12\x0b\n\x07Message\x10\x00\x12\x0c\n\x08MapEvent\x10\x01\x12\r\n\tDestroyed\x10\x02\x12\r\n\tTruncated\x10\x03\x42/\n+com.oracle.coherence.grpc.messages.cache.v1P\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'cache_service_messages_v1_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n+com.oracle.coherence.grpc.messages.cache.v1P\001'
  _NAMEDCACHEREQUESTTYPE._serialized_start=1840
  _NAMEDCACHEREQUESTTYPE._serialized_end=2285
  _RESPONSETYPE._serialized_start=2287
  _RESPONSETYPE._serialized_end=2358
  _NAMEDCACHEREQUEST._serialized_start=203
  _NAMEDCACHEREQUEST._serialized_end=369
  _NAMEDCACHERESPONSE._serialized_start=372
  _NAMEDCACHERESPONSE._serialized_end=513
  _ENSURECACHEREQUEST._serialized_start=515
  _ENSURECACHEREQUEST._serialized_end=550
  _PUTREQUEST._serialized_start=552
  _PUTREQUEST._serialized_end=618
  _PUTALLREQUEST._serialized_start=620
  _PUTALLREQUEST._serialized_end=718
  _REPLACEMAPPINGREQUEST._serialized_start=720
  _REPLACEMAPPINGREQUEST._serialized_end=797
  _INDEXREQUEST._serialized_start=799
  _INDEXREQUEST._serialized_end=917
  _KEYSORFILTER._serialized_start=919
  _KEYSORFILTER._serialized_end=1043
  _KEYORFILTER._serialized_start=1045
  _KEYORFILTER._serialized_end=1106
  _EXECUTEREQUEST._serialized_start=1108
  _EXECUTEREQUEST._serialized_end=1201
  _QUERYREQUEST._serialized_start=1203
  _QUERYREQUEST._serialized_end=1289
  _MAPLISTENERREQUEST._serialized_start=1292
  _MAPLISTENERREQUEST._serialized_end=1493
  _MAPEVENTMESSAGE._serialized_start=1496
  _MAPEVENTMESSAGE._serialized_end=1837
  _MAPEVENTMESSAGE_TRANSFORMATIONSTATE._serialized_start=1757
  _MAPEVENTMESSAGE_TRANSFORMATIONSTATE._serialized_end=1837
# @@protoc_insertion_point(module_scope)
