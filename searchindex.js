Search.setIndex({"alltitles": {"AbstractComparableAggregator": [[2, "abstractcomparableaggregator"]], "AbstractCompositeExtractor": [[6, "abstractcompositeextractor"]], "AbstractDoubleAggregator": [[2, "abstractdoubleaggregator"]], "Aggregation": [[0, null]], "Aggregators": [[1, "aggregators"], [2, "aggregators"]], "AllFilter": [[7, "allfilter"]], "AlwaysFilter": [[7, "alwaysfilter"]], "AndFilter": [[7, "andfilter"]], "AnyFilter": [[7, "anyfilter"]], "ArrayFilter": [[7, "arrayfilter"]], "AverageAggregator": [[2, "averageaggregator"]], "BetweenFilter": [[7, "betweenfilter"]], "BinaryQuantIndex": [[3, "binaryquantindex"]], "BitVector": [[3, "bitvector"]], "ByteVector": [[3, "bytevector"]], "CacheOptions": [[1, "cacheoptions"]], "CacheStats": [[1, "cachestats"]], "Caches": [[10, null]], "ChainedExtractor": [[6, "chainedextractor"]], "Comparator": [[1, "comparator"]], "ComparisonFilter": [[7, "comparisonfilter"]], "CompositeAggregator": [[2, "compositeaggregator"]], "CompositeProcessor": [[8, "compositeprocessor"]], "CompositeUpdater": [[6, "compositeupdater"]], "ConditionalProcessor": [[8, "conditionalprocessor"]], "ConditionalPut": [[8, "conditionalput"]], "ConditionalPutAll": [[8, "conditionalputall"]], "ConditionalRemove": [[8, "conditionalremove"]], "ContainsAllFilter": [[7, "containsallfilter"]], "ContainsAnyFilter": [[7, "containsanyfilter"]], "ContainsFilter": [[7, "containsfilter"]], "Contributing": [[13, "contributing"]], "CosineDistance": [[3, "cosinedistance"]], "CountAggregator": [[2, "countaggregator"]], "DistanceAlgorithm": [[3, "distancealgorithm"]], "DistinctValuesAggregator": [[2, "distinctvaluesaggregator"]], "DocumentChunk": [[3, "documentchunk"]], "Documentation": [[13, "documentation"]], "Entry Processing": [[11, null]], "EntryAggregator": [[2, "entryaggregator"]], "EntryProcessor": [[8, "entryprocessor"]], "EqualsFilter": [[7, "equalsfilter"]], "Events": [[12, null]], "Examples": [[13, "examples"]], "ExtractorComparator": [[4, "extractorcomparator"]], "ExtractorFilter": [[7, "extractorfilter"]], "ExtractorProcessor": [[8, "extractorprocessor"]], "Extractors": [[1, "extractors"], [6, "extractors"]], "Features": [[13, "features"]], "Filter": [[7, "filter"]], "Filters": [[1, "filters"], [7, "filters"]], "FloatVector": [[3, "floatvector"]], "GreaterEqualsFilter": [[7, "greaterequalsfilter"]], "GreaterFilter": [[7, "greaterfilter"]], "GroupAggregator": [[2, "groupaggregator"]], "Help": [[13, "help"]], "IdentityExtractor": [[6, "identityextractor"]], "InFilter": [[7, "infilter"]], "Indices and tables": [[13, "indices-and-tables"]], "InnerProductDistance": [[3, "innerproductdistance"]], "Installation": [[13, "installation"], [14, null]], "InverseComparator": [[4, "inversecomparator"]], "IsNoneFilter": [[7, "isnonefilter"]], "IsNotNoneFilter": [[7, "isnotnonefilter"]], "L2SquaredDistance": [[3, "l2squareddistance"]], "LessFilter": [[7, "lessfilter"]], "License": [[13, "license"]], "LikeFilter": [[7, "likefilter"]], "MapEntry": [[1, "mapentry"]], "MapEvent": [[1, "mapevent"], [5, "mapevent"]], "MapEventFilter": [[7, "mapeventfilter"]], "MapEventType": [[5, "mapeventtype"]], "MapLifecycleEvent": [[5, "maplifecycleevent"]], "MapListener": [[1, "maplistener"], [5, "maplistener"]], "MaxAggregator": [[2, "maxaggregator"]], "MethodInvocationProcessor": [[8, "methodinvocationprocessor"]], "MinAggregator": [[2, "minaggregator"]], "Modules": [[1, "modules"]], "NamedCache": [[1, "namedcache"]], "NamedMap": [[1, "namedmap"]], "Near Caches": [[10, "near-caches"]], "NearCacheOptions": [[1, "nearcacheoptions"]], "NeverFilter": [[7, "neverfilter"]], "NotEqualsFilter": [[7, "notequalsfilter"]], "NotFilter": [[7, "notfilter"]], "NullProcessor": [[8, "nullprocessor"]], "NumberIncrementor": [[8, "numberincrementor"]], "NumberMultiplier": [[8, "numbermultiplier"]], "Options": [[1, "options"]], "OrFilter": [[7, "orfilter"]], "PredicateFilter": [[7, "predicatefilter"]], "PreloadRequest": [[8, "preloadrequest"]], "PresentFilter": [[7, "presentfilter"]], "PriorityAggregator": [[2, "priorityaggregator"]], "Processors": [[1, "processors"], [8, "processors"]], "PropertyManipulator": [[8, "propertymanipulator"]], "PropertyProcessor": [[8, "propertyprocessor"]], "Python Client API Reference for Oracle Coherence": [[1, null]], "Python Client for Oracle Coherence": [[13, null]], "QueryRecorder": [[2, "queryrecorder"]], "QueryResult": [[3, "queryresult"]], "Querying": [[15, null]], "ReducerAggregator": [[2, "reduceraggregator"]], "RegexFilter": [[7, "regexfilter"]], "Requirements": [[13, "requirements"]], "SafeComparator": [[4, "safecomparator"]], "Schedule": [[2, "schedule"]], "ScriptProcessor": [[8, "scriptprocessor"]], "Security": [[13, "security"]], "Serialization": [[16, null]], "Session": [[1, "session"]], "Sessions": [[17, null]], "SimilaritySearch": [[3, "similaritysearch"]], "Starting a Coherence Cluster": [[13, "starting-a-coherence-cluster"]], "SumAggregator": [[2, "sumaggregator"]], "The Basics": [[9, null]], "Timeout": [[2, "timeout"]], "TlsOptions": [[1, "tlsoptions"]], "TopAggregator": [[2, "topaggregator"]], "TouchProcessor": [[8, "touchprocessor"]], "UniversalExtractor": [[6, "universalextractor"]], "UniversalUpdater": [[6, "universalupdater"]], "UpdaterProcessor": [[8, "updaterprocessor"]], "ValueExtractor": [[6, "valueextractor"]], "ValueManipulator": [[6, "valuemanipulator"]], "ValueUpdater": [[6, "valueupdater"]], "Vector": [[3, "vector"]], "VersionedPut": [[8, "versionedput"]], "VersionedPutAll": [[8, "versionedputall"]], "XorFilter": [[7, "xorfilter"]], "coherence.aggregator": [[2, null]], "coherence.ai [24.09.2+ server required]": [[3, null]], "coherence.comparator": [[4, null]], "coherence.event": [[5, null]], "coherence.extractor": [[6, null]], "coherence.filter": [[7, null]], "coherence.processor": [[8, null]]}, "docnames": ["aggregation", "api_reference", "api_reference/aggregator", "api_reference/ai", "api_reference/comparator", "api_reference/event", "api_reference/extractor", "api_reference/filter", "api_reference/processor", "basics", "caches", "entryprocessing", "events", "index", "installation", "querying", "serialization", "sessions"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["aggregation.rst", "api_reference.rst", "api_reference/aggregator.rst", "api_reference/ai.rst", "api_reference/comparator.rst", "api_reference/event.rst", "api_reference/extractor.rst", "api_reference/filter.rst", "api_reference/processor.rst", "basics.rst", "caches.rst", "entryprocessing.rst", "events.rst", "index.rst", "installation.rst", "querying.rst", "serialization.rst", "sessions.rst"], "indexentries": {"__init__() (coherence.aggregator.abstractcomparableaggregator method)": [[2, "coherence.aggregator.AbstractComparableAggregator.__init__", false]], "__init__() (coherence.aggregator.abstractdoubleaggregator method)": [[2, "coherence.aggregator.AbstractDoubleAggregator.__init__", false]], "__init__() (coherence.aggregator.averageaggregator method)": [[2, "coherence.aggregator.AverageAggregator.__init__", false]], "__init__() (coherence.aggregator.compositeaggregator method)": [[2, "coherence.aggregator.CompositeAggregator.__init__", false]], "__init__() (coherence.aggregator.countaggregator method)": [[2, "coherence.aggregator.CountAggregator.__init__", false]], "__init__() (coherence.aggregator.distinctvaluesaggregator method)": [[2, "coherence.aggregator.DistinctValuesAggregator.__init__", false]], "__init__() (coherence.aggregator.entryaggregator method)": [[2, "coherence.aggregator.EntryAggregator.__init__", false]], "__init__() (coherence.aggregator.groupaggregator method)": [[2, "coherence.aggregator.GroupAggregator.__init__", false]], "__init__() (coherence.aggregator.maxaggregator method)": [[2, "coherence.aggregator.MaxAggregator.__init__", false]], "__init__() (coherence.aggregator.minaggregator method)": [[2, "coherence.aggregator.MinAggregator.__init__", false]], "__init__() (coherence.aggregator.priorityaggregator method)": [[2, "coherence.aggregator.PriorityAggregator.__init__", false]], "__init__() (coherence.aggregator.queryrecorder method)": [[2, "coherence.aggregator.QueryRecorder.__init__", false]], "__init__() (coherence.aggregator.reduceraggregator method)": [[2, "coherence.aggregator.ReducerAggregator.__init__", false]], "__init__() (coherence.aggregator.sumaggregator method)": [[2, "coherence.aggregator.SumAggregator.__init__", false]], "__init__() (coherence.aggregator.topaggregator method)": [[2, "coherence.aggregator.TopAggregator.__init__", false]], "__init__() (coherence.ai.binaryquantindex method)": [[3, "coherence.ai.BinaryQuantIndex.__init__", false]], "__init__() (coherence.ai.bitvector method)": [[3, "coherence.ai.BitVector.__init__", false]], "__init__() (coherence.ai.bytevector method)": [[3, "coherence.ai.ByteVector.__init__", false]], "__init__() (coherence.ai.cosinedistance method)": [[3, "coherence.ai.CosineDistance.__init__", false]], "__init__() (coherence.ai.distancealgorithm method)": [[3, "coherence.ai.DistanceAlgorithm.__init__", false]], "__init__() (coherence.ai.documentchunk method)": [[3, "coherence.ai.DocumentChunk.__init__", false]], "__init__() (coherence.ai.floatvector method)": [[3, "coherence.ai.FloatVector.__init__", false]], "__init__() (coherence.ai.innerproductdistance method)": [[3, "coherence.ai.InnerProductDistance.__init__", false]], "__init__() (coherence.ai.l2squareddistance method)": [[3, "coherence.ai.L2SquaredDistance.__init__", false]], "__init__() (coherence.ai.queryresult method)": [[3, "coherence.ai.QueryResult.__init__", false]], "__init__() (coherence.ai.similaritysearch method)": [[3, "coherence.ai.SimilaritySearch.__init__", false]], "__init__() (coherence.ai.vector method)": [[3, "coherence.ai.Vector.__init__", false]], "__init__() (coherence.cacheoptions method)": [[1, "coherence.CacheOptions.__init__", false]], "__init__() (coherence.event.maplistener method)": [[1, "coherence.event.MapListener.__init__", false]], "__init__() (coherence.extractor.abstractcompositeextractor method)": [[6, "coherence.extractor.AbstractCompositeExtractor.__init__", false]], "__init__() (coherence.extractor.chainedextractor method)": [[6, "coherence.extractor.ChainedExtractor.__init__", false]], "__init__() (coherence.extractor.compositeupdater method)": [[6, "coherence.extractor.CompositeUpdater.__init__", false]], "__init__() (coherence.extractor.identityextractor method)": [[6, "coherence.extractor.IdentityExtractor.__init__", false]], "__init__() (coherence.extractor.universalextractor method)": [[6, "coherence.extractor.UniversalExtractor.__init__", false]], "__init__() (coherence.extractor.universalupdater method)": [[6, "coherence.extractor.UniversalUpdater.__init__", false]], "__init__() (coherence.extractor.valueextractor method)": [[6, "coherence.extractor.ValueExtractor.__init__", false]], "__init__() (coherence.extractor.valuemanipulator method)": [[6, "coherence.extractor.ValueManipulator.__init__", false]], "__init__() (coherence.extractor.valueupdater method)": [[6, "coherence.extractor.ValueUpdater.__init__", false]], "__init__() (coherence.filter.allfilter method)": [[7, "coherence.filter.AllFilter.__init__", false]], "__init__() (coherence.filter.alwaysfilter method)": [[7, "coherence.filter.AlwaysFilter.__init__", false]], "__init__() (coherence.filter.andfilter method)": [[7, "coherence.filter.AndFilter.__init__", false]], "__init__() (coherence.filter.anyfilter method)": [[7, "coherence.filter.AnyFilter.__init__", false]], "__init__() (coherence.filter.arrayfilter method)": [[7, "coherence.filter.ArrayFilter.__init__", false]], "__init__() (coherence.filter.betweenfilter method)": [[7, "coherence.filter.BetweenFilter.__init__", false]], "__init__() (coherence.filter.comparisonfilter method)": [[7, "coherence.filter.ComparisonFilter.__init__", false]], "__init__() (coherence.filter.containsallfilter method)": [[7, "coherence.filter.ContainsAllFilter.__init__", false]], "__init__() (coherence.filter.containsanyfilter method)": [[7, "coherence.filter.ContainsAnyFilter.__init__", false]], "__init__() (coherence.filter.containsfilter method)": [[7, "coherence.filter.ContainsFilter.__init__", false]], "__init__() (coherence.filter.equalsfilter method)": [[7, "coherence.filter.EqualsFilter.__init__", false]], "__init__() (coherence.filter.extractorfilter method)": [[7, "coherence.filter.ExtractorFilter.__init__", false]], "__init__() (coherence.filter.greaterequalsfilter method)": [[7, "coherence.filter.GreaterEqualsFilter.__init__", false]], "__init__() (coherence.filter.greaterfilter method)": [[7, "coherence.filter.GreaterFilter.__init__", false]], "__init__() (coherence.filter.infilter method)": [[7, "coherence.filter.InFilter.__init__", false]], "__init__() (coherence.filter.isnonefilter method)": [[7, "coherence.filter.IsNoneFilter.__init__", false]], "__init__() (coherence.filter.isnotnonefilter method)": [[7, "coherence.filter.IsNotNoneFilter.__init__", false]], "__init__() (coherence.filter.lessfilter method)": [[7, "coherence.filter.LessFilter.__init__", false]], "__init__() (coherence.filter.likefilter method)": [[7, "coherence.filter.LikeFilter.__init__", false]], "__init__() (coherence.filter.mapeventfilter method)": [[7, "coherence.filter.MapEventFilter.__init__", false]], "__init__() (coherence.filter.neverfilter method)": [[7, "coherence.filter.NeverFilter.__init__", false]], "__init__() (coherence.filter.notequalsfilter method)": [[7, "coherence.filter.NotEqualsFilter.__init__", false]], "__init__() (coherence.filter.notfilter method)": [[7, "coherence.filter.NotFilter.__init__", false]], "__init__() (coherence.filter.orfilter method)": [[7, "coherence.filter.OrFilter.__init__", false]], "__init__() (coherence.filter.predicatefilter method)": [[7, "coherence.filter.PredicateFilter.__init__", false]], "__init__() (coherence.filter.presentfilter method)": [[7, "coherence.filter.PresentFilter.__init__", false]], "__init__() (coherence.filter.regexfilter method)": [[7, "coherence.filter.RegexFilter.__init__", false]], "__init__() (coherence.filter.xorfilter method)": [[7, "coherence.filter.XorFilter.__init__", false]], "__init__() (coherence.nearcacheoptions method)": [[1, "coherence.NearCacheOptions.__init__", false]], "__init__() (coherence.options method)": [[1, "coherence.Options.__init__", false]], "__init__() (coherence.processor.compositeprocessor method)": [[8, "coherence.processor.CompositeProcessor.__init__", false]], "__init__() (coherence.processor.conditionalprocessor method)": [[8, "coherence.processor.ConditionalProcessor.__init__", false]], "__init__() (coherence.processor.conditionalput method)": [[8, "coherence.processor.ConditionalPut.__init__", false]], "__init__() (coherence.processor.conditionalputall method)": [[8, "coherence.processor.ConditionalPutAll.__init__", false]], "__init__() (coherence.processor.conditionalremove method)": [[8, "coherence.processor.ConditionalRemove.__init__", false]], "__init__() (coherence.processor.entryprocessor method)": [[8, "coherence.processor.EntryProcessor.__init__", false]], "__init__() (coherence.processor.extractorprocessor method)": [[8, "coherence.processor.ExtractorProcessor.__init__", false]], "__init__() (coherence.processor.methodinvocationprocessor method)": [[8, "coherence.processor.MethodInvocationProcessor.__init__", false]], "__init__() (coherence.processor.nullprocessor method)": [[8, "coherence.processor.NullProcessor.__init__", false]], "__init__() (coherence.processor.numberincrementor method)": [[8, "coherence.processor.NumberIncrementor.__init__", false]], "__init__() (coherence.processor.numbermultiplier method)": [[8, "coherence.processor.NumberMultiplier.__init__", false]], "__init__() (coherence.processor.preloadrequest method)": [[8, "coherence.processor.PreloadRequest.__init__", false]], "__init__() (coherence.processor.propertymanipulator method)": [[8, "coherence.processor.PropertyManipulator.__init__", false]], "__init__() (coherence.processor.propertyprocessor method)": [[8, "coherence.processor.PropertyProcessor.__init__", false]], "__init__() (coherence.processor.scriptprocessor method)": [[8, "coherence.processor.ScriptProcessor.__init__", false]], "__init__() (coherence.processor.touchprocessor method)": [[8, "coherence.processor.TouchProcessor.__init__", false]], "__init__() (coherence.processor.updaterprocessor method)": [[8, "coherence.processor.UpdaterProcessor.__init__", false]], "__init__() (coherence.processor.versionedput method)": [[8, "coherence.processor.VersionedPut.__init__", false]], "__init__() (coherence.processor.versionedputall method)": [[8, "coherence.processor.VersionedPutAll.__init__", false]], "__init__() (coherence.session method)": [[1, "coherence.Session.__init__", false]], "__init__() (coherence.tlsoptions method)": [[1, "coherence.TlsOptions.__init__", false]], "abstractcomparableaggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.AbstractComparableAggregator", false]], "abstractcompositeextractor (class in coherence.extractor)": [[6, "coherence.extractor.AbstractCompositeExtractor", false]], "abstractdoubleaggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.AbstractDoubleAggregator", false]], "add_index() (coherence.namedmap method)": [[1, "coherence.NamedMap.add_index", false]], "add_map_listener() (coherence.namedmap method)": [[1, "coherence.NamedMap.add_map_listener", false]], "address (coherence.options property)": [[1, "coherence.Options.address", false]], "aggregate() (coherence.namedmap method)": [[1, "coherence.NamedMap.aggregate", false]], "aggregators (class in coherence)": [[1, "coherence.Aggregators", false]], "aggregators (class in coherence.aggregator)": [[2, "coherence.aggregator.Aggregators", false]], "all (coherence.filter.mapeventfilter attribute)": [[7, "coherence.filter.MapEventFilter.ALL", false]], "all() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.all", false]], "all() (coherence.filters static method)": [[1, "coherence.Filters.all", false]], "allfilter (class in coherence.filter)": [[7, "coherence.filter.AllFilter", false]], "always() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.always", false]], "always() (coherence.filters static method)": [[1, "coherence.Filters.always", false]], "alwaysfilter (class in coherence.filter)": [[7, "coherence.filter.AlwaysFilter", false]], "and() (coherence.filter.filter method)": [[7, "coherence.filter.Filter.And", false]], "and_then() (coherence.aggregator.entryaggregator method)": [[2, "coherence.aggregator.EntryAggregator.and_then", false]], "and_then() (coherence.extractor.valueextractor method)": [[6, "coherence.extractor.ValueExtractor.and_then", false]], "and_then() (coherence.processor.compositeprocessor method)": [[8, "coherence.processor.CompositeProcessor.and_then", false]], "and_then() (coherence.processor.entryprocessor method)": [[8, "coherence.processor.EntryProcessor.and_then", false]], "andfilter (class in coherence.filter)": [[7, "coherence.filter.AndFilter", false]], "any() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.any", false]], "any() (coherence.filters static method)": [[1, "coherence.Filters.any", false]], "anyfilter (class in coherence.filter)": [[7, "coherence.filter.AnyFilter", false]], "array_contains() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.array_contains", false]], "array_contains() (coherence.filters static method)": [[1, "coherence.Filters.array_contains", false]], "array_contains_all() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.array_contains_all", false]], "array_contains_all() (coherence.filters static method)": [[1, "coherence.Filters.array_contains_all", false]], "array_contains_any() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.array_contains_any", false]], "array_contains_any() (coherence.filters static method)": [[1, "coherence.Filters.array_contains_any", false]], "arrayfilter (class in coherence.filter)": [[7, "coherence.filter.ArrayFilter", false]], "ascending (coherence.aggregator.topaggregator property)": [[2, "coherence.aggregator.TopAggregator.ascending", false]], "average() (coherence.aggregator.aggregators static method)": [[2, "coherence.aggregator.Aggregators.average", false]], "average() (coherence.aggregators static method)": [[1, "coherence.Aggregators.average", false]], "averageaggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.AverageAggregator", false]], "between() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.between", false]], "between() (coherence.filters static method)": [[1, "coherence.Filters.between", false]], "betweenfilter (class in coherence.filter)": [[7, "coherence.filter.BetweenFilter", false]], "binaryquantindex (class in coherence.ai)": [[3, "coherence.ai.BinaryQuantIndex", false]], "bitvector (class in coherence.ai)": [[3, "coherence.ai.BitVector", false]], "bytes (coherence.cachestats property)": [[1, "coherence.CacheStats.bytes", false]], "bytevector (class in coherence.ai)": [[3, "coherence.ai.ByteVector", false]], "ca_cert_path (coherence.tlsoptions property)": [[1, "coherence.TlsOptions.ca_cert_path", false]], "cacheoptions (class in coherence)": [[1, "coherence.CacheOptions", false]], "cachestats (class in coherence)": [[1, "coherence.CacheStats", false]], "chainedextractor (class in coherence.extractor)": [[6, "coherence.extractor.ChainedExtractor", false]], "channel (coherence.session property)": [[1, "coherence.Session.channel", false]], "channel_options (coherence.options property)": [[1, "coherence.Options.channel_options", false]], "clear() (coherence.namedmap method)": [[1, "coherence.NamedMap.clear", false]], "client_cert_path (coherence.tlsoptions property)": [[1, "coherence.TlsOptions.client_cert_path", false]], "client_key_path (coherence.tlsoptions property)": [[1, "coherence.TlsOptions.client_key_path", false]], "close() (coherence.session method)": [[1, "coherence.Session.close", false]], "closed (coherence.session property)": [[1, "coherence.Session.closed", false]], "comparator (class in coherence)": [[1, "coherence.Comparator", false]], "comparisonfilter (class in coherence.filter)": [[7, "coherence.filter.ComparisonFilter", false]], "compose() (coherence.extractor.valueextractor method)": [[6, "coherence.extractor.ValueExtractor.compose", false]], "compositeaggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.CompositeAggregator", false]], "compositeprocessor (class in coherence.processor)": [[8, "coherence.processor.CompositeProcessor", false]], "compositeupdater (class in coherence.extractor)": [[6, "coherence.extractor.CompositeUpdater", false]], "conditional_put() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.conditional_put", false]], "conditional_put() (coherence.processors static method)": [[1, "coherence.Processors.conditional_put", false]], "conditional_put_all() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.conditional_put_all", false]], "conditional_put_all() (coherence.processors static method)": [[1, "coherence.Processors.conditional_put_all", false]], "conditional_remove() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.conditional_remove", false]], "conditional_remove() (coherence.processors static method)": [[1, "coherence.Processors.conditional_remove", false]], "conditionalprocessor (class in coherence.processor)": [[8, "coherence.processor.ConditionalProcessor", false]], "conditionalput (class in coherence.processor)": [[8, "coherence.processor.ConditionalPut", false]], "conditionalputall (class in coherence.processor)": [[8, "coherence.processor.ConditionalPutAll", false]], "conditionalremove (class in coherence.processor)": [[8, "coherence.processor.ConditionalRemove", false]], "contains() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.contains", false]], "contains() (coherence.filters static method)": [[1, "coherence.Filters.contains", false]], "contains_all() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.contains_all", false]], "contains_all() (coherence.filters static method)": [[1, "coherence.Filters.contains_all", false]], "contains_any() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.contains_any", false]], "contains_any() (coherence.filters static method)": [[1, "coherence.Filters.contains_any", false]], "contains_key() (coherence.namedmap method)": [[1, "coherence.NamedMap.contains_key", false]], "contains_value() (coherence.namedmap method)": [[1, "coherence.NamedMap.contains_value", false]], "containsallfilter (class in coherence.filter)": [[7, "coherence.filter.ContainsAllFilter", false]], "containsanyfilter (class in coherence.filter)": [[7, "coherence.filter.ContainsAnyFilter", false]], "containsfilter (class in coherence.filter)": [[7, "coherence.filter.ContainsFilter", false]], "cosinedistance (class in coherence.ai)": [[3, "coherence.ai.CosineDistance", false]], "count() (coherence.aggregator.aggregators static method)": [[2, "coherence.aggregator.Aggregators.count", false]], "count() (coherence.aggregators static method)": [[1, "coherence.Aggregators.count", false]], "countaggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.CountAggregator", false]], "create() (coherence.extractor.universalextractor class method)": [[6, "coherence.extractor.UniversalExtractor.create", false]], "default (coherence.aggregator.timeout attribute)": [[2, "coherence.aggregator.Timeout.DEFAULT", false]], "default_address (coherence.options attribute)": [[1, "coherence.Options.DEFAULT_ADDRESS", false]], "default_expiry (coherence.cacheoptions property)": [[1, "coherence.CacheOptions.default_expiry", false]], "default_format (coherence.options attribute)": [[1, "coherence.Options.DEFAULT_FORMAT", false]], "default_ready_timeout (coherence.options attribute)": [[1, "coherence.Options.DEFAULT_READY_TIMEOUT", false]], "default_request_timeout (coherence.options attribute)": [[1, "coherence.Options.DEFAULT_REQUEST_TIMEOUT", false]], "default_scope (coherence.options attribute)": [[1, "coherence.Options.DEFAULT_SCOPE", false]], "default_session_disconnect_timeout (coherence.options attribute)": [[1, "coherence.Options.DEFAULT_SESSION_DISCONNECT_TIMEOUT", false]], "deleted (coherence.filter.mapeventfilter attribute)": [[7, "coherence.filter.MapEventFilter.DELETED", false]], "descending (coherence.aggregator.topaggregator property)": [[2, "coherence.aggregator.TopAggregator.descending", false]], "description (coherence.event.mapevent property)": [[1, "coherence.event.MapEvent.description", false]], "destroy() (coherence.namedmap method)": [[1, "coherence.NamedMap.destroy", false]], "distancealgorithm (class in coherence.ai)": [[3, "coherence.ai.DistanceAlgorithm", false]], "distinct() (coherence.aggregator.aggregators static method)": [[2, "coherence.aggregator.Aggregators.distinct", false]], "distinct() (coherence.aggregators static method)": [[1, "coherence.Aggregators.distinct", false]], "distinctvaluesaggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.DistinctValuesAggregator", false]], "documentchunk (class in coherence.ai)": [[3, "coherence.ai.DocumentChunk", false]], "enabled (coherence.tlsoptions property)": [[1, "coherence.TlsOptions.enabled", false]], "entries() (coherence.namedmap method)": [[1, "coherence.NamedMap.entries", false]], "entryaggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.EntryAggregator", false]], "entryprocessor (class in coherence.processor)": [[8, "coherence.processor.EntryProcessor", false]], "env_ca_cert (coherence.tlsoptions attribute)": [[1, "coherence.TlsOptions.ENV_CA_CERT", false]], "env_client_cert (coherence.tlsoptions attribute)": [[1, "coherence.TlsOptions.ENV_CLIENT_CERT", false]], "env_client_key (coherence.tlsoptions attribute)": [[1, "coherence.TlsOptions.ENV_CLIENT_KEY", false]], "env_ready_timeout (coherence.options attribute)": [[1, "coherence.Options.ENV_READY_TIMEOUT", false]], "env_request_timeout (coherence.options attribute)": [[1, "coherence.Options.ENV_REQUEST_TIMEOUT", false]], "env_server_address (coherence.options attribute)": [[1, "coherence.Options.ENV_SERVER_ADDRESS", false]], "env_session_disconnect_timeout (coherence.options attribute)": [[1, "coherence.Options.ENV_SESSION_DISCONNECT_TIMEOUT", false]], "equals() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.equals", false]], "equals() (coherence.filters static method)": [[1, "coherence.Filters.equals", false]], "equalsfilter (class in coherence.filter)": [[7, "coherence.filter.EqualsFilter", false]], "event() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.event", false]], "event() (coherence.filters static method)": [[1, "coherence.Filters.event", false]], "execution_timeout_in_millis (coherence.aggregator.priorityaggregator property)": [[2, "coherence.aggregator.PriorityAggregator.execution_timeout_in_millis", false]], "expires (coherence.cachestats property)": [[1, "coherence.CacheStats.expires", false]], "expires_duration (coherence.cachestats property)": [[1, "coherence.CacheStats.expires_duration", false]], "explain (coherence.aggregator.queryrecorder attribute)": [[2, "coherence.aggregator.QueryRecorder.EXPLAIN", false]], "extract() (coherence.aggregator.topaggregator method)": [[2, "coherence.aggregator.TopAggregator.extract", false]], "extract() (coherence.extractor.extractors class method)": [[6, "coherence.extractor.Extractors.extract", false]], "extract() (coherence.extractor.valueextractor class method)": [[6, "coherence.extractor.ValueExtractor.extract", false]], "extract() (coherence.extractors class method)": [[1, "coherence.Extractors.extract", false]], "extract() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.extract", false]], "extract() (coherence.processors static method)": [[1, "coherence.Processors.extract", false]], "extractorcomparator (class in coherence.comparator)": [[4, "coherence.comparator.ExtractorComparator", false]], "extractorfilter (class in coherence.filter)": [[7, "coherence.filter.ExtractorFilter", false]], "extractorprocessor (class in coherence.processor)": [[8, "coherence.processor.ExtractorProcessor", false]], "extractors (class in coherence)": [[1, "coherence.Extractors", false]], "extractors (class in coherence.extractor)": [[6, "coherence.extractor.Extractors", false]], "filter (class in coherence.filter)": [[7, "coherence.filter.Filter", false]], "filters (class in coherence)": [[1, "coherence.Filters", false]], "filters (class in coherence.filter)": [[7, "coherence.filter.Filters", false]], "first (coherence.aggregator.schedule attribute)": [[2, "coherence.aggregator.Schedule.FIRST", false]], "floatvector (class in coherence.ai)": [[3, "coherence.ai.FloatVector", false]], "format (coherence.options property)": [[1, "coherence.Options.format", false]], "format (coherence.session property)": [[1, "coherence.Session.format", false]], "from_filter() (coherence.filter.mapeventfilter class method)": [[7, "coherence.filter.MapEventFilter.from_filter", false]], "from_mask() (coherence.filter.mapeventfilter class method)": [[7, "coherence.filter.MapEventFilter.from_mask", false]], "get() (coherence.namedmap method)": [[1, "coherence.NamedMap.get", false]], "get_all() (coherence.namedmap method)": [[1, "coherence.NamedMap.get_all", false]], "get_extractor() (coherence.extractor.compositeupdater method)": [[6, "coherence.extractor.CompositeUpdater.get_extractor", false]], "get_extractor() (coherence.extractor.valuemanipulator method)": [[6, "coherence.extractor.ValueManipulator.get_extractor", false]], "get_extractor() (coherence.processor.propertymanipulator method)": [[8, "coherence.processor.PropertyManipulator.get_extractor", false]], "get_or_default() (coherence.namedmap method)": [[1, "coherence.NamedMap.get_or_default", false]], "get_updator() (coherence.extractor.compositeupdater method)": [[6, "coherence.extractor.CompositeUpdater.get_updator", false]], "get_updator() (coherence.extractor.valuemanipulator method)": [[6, "coherence.extractor.ValueManipulator.get_updator", false]], "get_updator() (coherence.processor.propertymanipulator method)": [[8, "coherence.processor.PropertyManipulator.get_updator", false]], "gets (coherence.cachestats property)": [[1, "coherence.CacheStats.gets", false]], "greater() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.greater", false]], "greater() (coherence.filters static method)": [[1, "coherence.Filters.greater", false]], "greater_equals() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.greater_equals", false]], "greater_equals() (coherence.filters static method)": [[1, "coherence.Filters.greater_equals", false]], "greaterequalsfilter (class in coherence.filter)": [[7, "coherence.filter.GreaterEqualsFilter", false]], "greaterfilter (class in coherence.filter)": [[7, "coherence.filter.GreaterFilter", false]], "group_by() (coherence.aggregator.aggregators static method)": [[2, "coherence.aggregator.Aggregators.group_by", false]], "group_by() (coherence.aggregators static method)": [[1, "coherence.Aggregators.group_by", false]], "groupaggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.GroupAggregator", false]], "high_unit_memory (coherence.nearcacheoptions property)": [[1, "coherence.NearCacheOptions.high_unit_memory", false]], "high_units (coherence.nearcacheoptions property)": [[1, "coherence.NearCacheOptions.high_units", false]], "hit_rate (coherence.cachestats property)": [[1, "coherence.CacheStats.hit_rate", false]], "hits (coherence.cachestats property)": [[1, "coherence.CacheStats.hits", false]], "identity() (coherence.extractor.extractors class method)": [[6, "coherence.extractor.Extractors.identity", false]], "identity() (coherence.extractors class method)": [[1, "coherence.Extractors.identity", false]], "identityextractor (class in coherence.extractor)": [[6, "coherence.extractor.IdentityExtractor", false]], "immediate (coherence.aggregator.schedule attribute)": [[2, "coherence.aggregator.Schedule.IMMEDIATE", false]], "increment() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.increment", false]], "increment() (coherence.processors static method)": [[1, "coherence.Processors.increment", false]], "infilter (class in coherence.filter)": [[7, "coherence.filter.InFilter", false]], "innerproductdistance (class in coherence.ai)": [[3, "coherence.ai.InnerProductDistance", false]], "inserted (coherence.filter.mapeventfilter attribute)": [[7, "coherence.filter.MapEventFilter.INSERTED", false]], "inversecomparator (class in coherence.comparator)": [[4, "coherence.comparator.InverseComparator", false]], "invoke() (coherence.namedmap method)": [[1, "coherence.NamedMap.invoke", false]], "invoke_accessor() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.invoke_accessor", false]], "invoke_accessor() (coherence.processors static method)": [[1, "coherence.Processors.invoke_accessor", false]], "invoke_all() (coherence.namedmap method)": [[1, "coherence.NamedMap.invoke_all", false]], "invoke_mutator() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.invoke_mutator", false]], "invoke_mutator() (coherence.processors static method)": [[1, "coherence.Processors.invoke_mutator", false]], "is_empty() (coherence.namedmap method)": [[1, "coherence.NamedMap.is_empty", false]], "is_in() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.is_in", false]], "is_in() (coherence.filters static method)": [[1, "coherence.Filters.is_in", false]], "is_none() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.is_none", false]], "is_none() (coherence.filters static method)": [[1, "coherence.Filters.is_none", false]], "is_not_none() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.is_not_none", false]], "is_not_none() (coherence.filters static method)": [[1, "coherence.Filters.is_not_none", false]], "is_ready() (coherence.session method)": [[1, "coherence.Session.is_ready", false]], "isnonefilter (class in coherence.filter)": [[7, "coherence.filter.IsNoneFilter", false]], "isnotnonefilter (class in coherence.filter)": [[7, "coherence.filter.IsNotNoneFilter", false]], "key (coherence.event.mapevent property)": [[1, "coherence.event.MapEvent.key", false]], "key_set (coherence.filter.mapeventfilter attribute)": [[7, "coherence.filter.MapEventFilter.KEY_SET", false]], "keys() (coherence.namedmap method)": [[1, "coherence.NamedMap.keys", false]], "l2squareddistance (class in coherence.ai)": [[3, "coherence.ai.L2SquaredDistance", false]], "less() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.less", false]], "less() (coherence.filters static method)": [[1, "coherence.Filters.less", false]], "less_equals() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.less_equals", false]], "less_equals() (coherence.filters static method)": [[1, "coherence.Filters.less_equals", false]], "lessfilter (class in coherence.filter)": [[7, "coherence.filter.LessFilter", false]], "like() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.like", false]], "like() (coherence.filters static method)": [[1, "coherence.Filters.like", false]], "likefilter (class in coherence.filter)": [[7, "coherence.filter.LikeFilter", false]], "locked() (coherence.tlsoptions method)": [[1, "coherence.TlsOptions.locked", false]], "mapentry (class in coherence)": [[1, "coherence.MapEntry", false]], "mapevent (class in coherence.event)": [[1, "coherence.event.MapEvent", false]], "mapeventfilter (class in coherence.filter)": [[7, "coherence.filter.MapEventFilter", false]], "maplistener (class in coherence.event)": [[1, "coherence.event.MapListener", false]], "max() (coherence.aggregator.aggregators static method)": [[2, "coherence.aggregator.Aggregators.max", false]], "max() (coherence.aggregators static method)": [[1, "coherence.Aggregators.max", false]], "maxaggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.MaxAggregator", false]], "methodinvocationprocessor (class in coherence.processor)": [[8, "coherence.processor.MethodInvocationProcessor", false]], "min() (coherence.aggregator.aggregators static method)": [[2, "coherence.aggregator.Aggregators.min", false]], "min() (coherence.aggregators static method)": [[1, "coherence.Aggregators.min", false]], "minaggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.MinAggregator", false]], "misses (coherence.cachestats property)": [[1, "coherence.CacheStats.misses", false]], "misses_duration (coherence.cachestats property)": [[1, "coherence.CacheStats.misses_duration", false]], "multiply() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.multiply", false]], "multiply() (coherence.processors static method)": [[1, "coherence.Processors.multiply", false]], "name (coherence.event.mapevent property)": [[1, "coherence.event.MapEvent.name", false]], "name (coherence.namedmap property)": [[1, "coherence.NamedMap.name", false]], "namedcache (class in coherence)": [[1, "coherence.NamedCache", false]], "namedmap (class in coherence)": [[1, "coherence.NamedMap", false]], "near_cache_options (coherence.cacheoptions property)": [[1, "coherence.CacheOptions.near_cache_options", false]], "near_cache_stats (coherence.namedmap property)": [[1, "coherence.NamedMap.near_cache_stats", false]], "nearcacheoptions (class in coherence)": [[1, "coherence.NearCacheOptions", false]], "negate() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.negate", false]], "negate() (coherence.filters static method)": [[1, "coherence.Filters.negate", false]], "never() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.never", false]], "never() (coherence.filters static method)": [[1, "coherence.Filters.never", false]], "neverfilter (class in coherence.filter)": [[7, "coherence.filter.NeverFilter", false]], "new (coherence.event.mapevent property)": [[1, "coherence.event.MapEvent.new", false]], "none (coherence.aggregator.timeout attribute)": [[2, "coherence.aggregator.Timeout.NONE", false]], "nop() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.nop", false]], "nop() (coherence.processors static method)": [[1, "coherence.Processors.nop", false]], "not_equals() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.not_equals", false]], "not_equals() (coherence.filters static method)": [[1, "coherence.Filters.not_equals", false]], "notequalsfilter (class in coherence.filter)": [[7, "coherence.filter.NotEqualsFilter", false]], "notfilter (class in coherence.filter)": [[7, "coherence.filter.NotFilter", false]], "nullprocessor (class in coherence.processor)": [[8, "coherence.processor.NullProcessor", false]], "num_expired (coherence.cachestats property)": [[1, "coherence.CacheStats.num_expired", false]], "num_pruned (coherence.cachestats property)": [[1, "coherence.CacheStats.num_pruned", false]], "numberincrementor (class in coherence.processor)": [[8, "coherence.processor.NumberIncrementor", false]], "numbermultiplier (class in coherence.processor)": [[8, "coherence.processor.NumberMultiplier", false]], "old (coherence.event.mapevent property)": [[1, "coherence.event.MapEvent.old", false]], "on() (coherence.namedmap method)": [[1, "coherence.NamedMap.on", false]], "on_any() (coherence.event.maplistener method)": [[1, "coherence.event.MapListener.on_any", false]], "on_deleted() (coherence.event.maplistener method)": [[1, "coherence.event.MapListener.on_deleted", false]], "on_inserted() (coherence.event.maplistener method)": [[1, "coherence.event.MapListener.on_inserted", false]], "on_updated() (coherence.event.maplistener method)": [[1, "coherence.event.MapListener.on_updated", false]], "options (class in coherence)": [[1, "coherence.Options", false]], "options (coherence.namedmap property)": [[1, "coherence.NamedMap.options", false]], "options (coherence.session property)": [[1, "coherence.Session.options", false]], "or() (coherence.filter.filter method)": [[7, "coherence.filter.Filter.Or", false]], "order_by() (coherence.aggregator.topaggregator method)": [[2, "coherence.aggregator.TopAggregator.order_by", false]], "orfilter (class in coherence.filter)": [[7, "coherence.filter.OrFilter", false]], "predicatefilter (class in coherence.filter)": [[7, "coherence.filter.PredicateFilter", false]], "preload() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.preload", false]], "preload() (coherence.processors static method)": [[1, "coherence.Processors.preload", false]], "preloadrequest (class in coherence.processor)": [[8, "coherence.processor.PreloadRequest", false]], "present() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.present", false]], "present() (coherence.filters static method)": [[1, "coherence.Filters.present", false]], "presentfilter (class in coherence.filter)": [[7, "coherence.filter.PresentFilter", false]], "priming (coherence.event.maplistener property)": [[1, "coherence.event.MapListener.priming", false]], "priority() (coherence.aggregator.aggregators static method)": [[2, "coherence.aggregator.Aggregators.priority", false]], "priority() (coherence.aggregators static method)": [[1, "coherence.Aggregators.priority", false]], "priorityaggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.PriorityAggregator", false]], "processors (class in coherence)": [[1, "coherence.Processors", false]], "processors (class in coherence.processor)": [[8, "coherence.processor.Processors", false]], "propertymanipulator (class in coherence.processor)": [[8, "coherence.processor.PropertyManipulator", false]], "propertyprocessor (class in coherence.processor)": [[8, "coherence.processor.PropertyProcessor", false]], "prune_factor (coherence.nearcacheoptions property)": [[1, "coherence.NearCacheOptions.prune_factor", false]], "prunes (coherence.cachestats property)": [[1, "coherence.CacheStats.prunes", false]], "prunes_duration (coherence.cachestats property)": [[1, "coherence.CacheStats.prunes_duration", false]], "put() (coherence.namedcache method)": [[1, "coherence.NamedCache.put", false]], "put() (coherence.namedmap method)": [[1, "coherence.NamedMap.put", false]], "put_all() (coherence.namedmap method)": [[1, "coherence.NamedMap.put_all", false]], "put_if_absent() (coherence.namedcache method)": [[1, "coherence.NamedCache.put_if_absent", false]], "put_if_absent() (coherence.namedmap method)": [[1, "coherence.NamedMap.put_if_absent", false]], "puts (coherence.cachestats property)": [[1, "coherence.CacheStats.puts", false]], "queryrecorder (class in coherence.aggregator)": [[2, "coherence.aggregator.QueryRecorder", false]], "queryresult (class in coherence.ai)": [[3, "coherence.ai.QueryResult", false]], "ready_timeout_seconds (coherence.options property)": [[1, "coherence.Options.ready_timeout_seconds", false]], "record() (coherence.aggregator.aggregators static method)": [[2, "coherence.aggregator.Aggregators.record", false]], "record() (coherence.aggregators static method)": [[1, "coherence.Aggregators.record", false]], "reduce() (coherence.aggregator.aggregators static method)": [[2, "coherence.aggregator.Aggregators.reduce", false]], "reduce() (coherence.aggregators static method)": [[1, "coherence.Aggregators.reduce", false]], "reduceraggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.ReducerAggregator", false]], "regex() (coherence.filter.filters static method)": [[7, "coherence.filter.Filters.regex", false]], "regex() (coherence.filters static method)": [[1, "coherence.Filters.regex", false]], "regexfilter (class in coherence.filter)": [[7, "coherence.filter.RegexFilter", false]], "release() (coherence.namedmap method)": [[1, "coherence.NamedMap.release", false]], "remove() (coherence.namedmap method)": [[1, "coherence.NamedMap.remove", false]], "remove_index() (coherence.namedmap method)": [[1, "coherence.NamedMap.remove_index", false]], "remove_map_listener() (coherence.namedmap method)": [[1, "coherence.NamedMap.remove_map_listener", false]], "remove_mapping() (coherence.namedmap method)": [[1, "coherence.NamedMap.remove_mapping", false]], "replace() (coherence.namedmap method)": [[1, "coherence.NamedMap.replace", false]], "replace_mapping() (coherence.namedmap method)": [[1, "coherence.NamedMap.replace_mapping", false]], "request_timeout_in_millis (coherence.aggregator.priorityaggregator property)": [[2, "coherence.aggregator.PriorityAggregator.request_timeout_in_millis", false]], "request_timeout_seconds (coherence.options property)": [[1, "coherence.Options.request_timeout_seconds", false]], "reset() (coherence.cachestats method)": [[1, "coherence.CacheStats.reset", false]], "safecomparator (class in coherence.comparator)": [[4, "coherence.comparator.SafeComparator", false]], "schedule (class in coherence.aggregator)": [[2, "coherence.aggregator.Schedule", false]], "scheduling_priority (coherence.aggregator.priorityaggregator property)": [[2, "coherence.aggregator.PriorityAggregator.scheduling_priority", false]], "scope (coherence.options property)": [[1, "coherence.Options.scope", false]], "scope (coherence.session property)": [[1, "coherence.Session.scope", false]], "script() (coherence.aggregator.aggregators static method)": [[2, "coherence.aggregator.Aggregators.script", false]], "script() (coherence.aggregators static method)": [[1, "coherence.Aggregators.script", false]], "script() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.script", false]], "script() (coherence.processors static method)": [[1, "coherence.Processors.script", false]], "scriptprocessor (class in coherence.processor)": [[8, "coherence.processor.ScriptProcessor", false]], "session (class in coherence)": [[1, "coherence.Session", false]], "session (coherence.namedmap property)": [[1, "coherence.NamedMap.session", false]], "session_disconnect_timeout_seconds (coherence.options property)": [[1, "coherence.Options.session_disconnect_timeout_seconds", false]], "session_id (coherence.session property)": [[1, "coherence.Session.session_id", false]], "similaritysearch (class in coherence.ai)": [[3, "coherence.ai.SimilaritySearch", false]], "size (coherence.cachestats property)": [[1, "coherence.CacheStats.size", false]], "size() (coherence.namedmap method)": [[1, "coherence.NamedMap.size", false]], "source (coherence.event.mapevent property)": [[1, "coherence.event.MapEvent.source", false]], "standard (coherence.aggregator.schedule attribute)": [[2, "coherence.aggregator.Schedule.STANDARD", false]], "sum() (coherence.aggregator.aggregators static method)": [[2, "coherence.aggregator.Aggregators.sum", false]], "sum() (coherence.aggregators static method)": [[1, "coherence.Aggregators.sum", false]], "sumaggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.SumAggregator", false]], "synchronous (coherence.event.maplistener property)": [[1, "coherence.event.MapListener.synchronous", false]], "timeout (class in coherence.aggregator)": [[2, "coherence.aggregator.Timeout", false]], "tls_options (coherence.options property)": [[1, "coherence.Options.tls_options", false]], "tlsoptions (class in coherence)": [[1, "coherence.TlsOptions", false]], "top() (coherence.aggregator.aggregators static method)": [[2, "coherence.aggregator.Aggregators.top", false]], "top() (coherence.aggregators static method)": [[1, "coherence.Aggregators.top", false]], "topaggregator (class in coherence.aggregator)": [[2, "coherence.aggregator.TopAggregator", false]], "touch() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.touch", false]], "touch() (coherence.processors static method)": [[1, "coherence.Processors.touch", false]], "touchprocessor (class in coherence.processor)": [[8, "coherence.processor.TouchProcessor", false]], "trace (coherence.aggregator.queryrecorder attribute)": [[2, "coherence.aggregator.QueryRecorder.TRACE", false]], "truncate() (coherence.namedmap method)": [[1, "coherence.NamedMap.truncate", false]], "ttl (coherence.nearcacheoptions property)": [[1, "coherence.NearCacheOptions.ttl", false]], "type (coherence.event.mapevent property)": [[1, "coherence.event.MapEvent.type", false]], "universalextractor (class in coherence.extractor)": [[6, "coherence.extractor.UniversalExtractor", false]], "universalupdater (class in coherence.extractor)": [[6, "coherence.extractor.UniversalUpdater", false]], "update() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.update", false]], "update() (coherence.processors static method)": [[1, "coherence.Processors.update", false]], "updated (coherence.filter.mapeventfilter attribute)": [[7, "coherence.filter.MapEventFilter.UPDATED", false]], "updated_entered (coherence.filter.mapeventfilter attribute)": [[7, "coherence.filter.MapEventFilter.UPDATED_ENTERED", false]], "updated_left (coherence.filter.mapeventfilter attribute)": [[7, "coherence.filter.MapEventFilter.UPDATED_LEFT", false]], "updated_within (coherence.filter.mapeventfilter attribute)": [[7, "coherence.filter.MapEventFilter.UPDATED_WITHIN", false]], "updaterprocessor (class in coherence.processor)": [[8, "coherence.processor.UpdaterProcessor", false]], "valueextractor (class in coherence.extractor)": [[6, "coherence.extractor.ValueExtractor", false]], "valuemanipulator (class in coherence.extractor)": [[6, "coherence.extractor.ValueManipulator", false]], "values() (coherence.namedmap method)": [[1, "coherence.NamedMap.values", false]], "valueupdater (class in coherence.extractor)": [[6, "coherence.extractor.ValueUpdater", false]], "vector (class in coherence.ai)": [[3, "coherence.ai.Vector", false]], "versioned_put() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.versioned_put", false]], "versioned_put() (coherence.processors static method)": [[1, "coherence.Processors.versioned_put", false]], "versioned_put_all() (coherence.processor.processors static method)": [[8, "coherence.processor.Processors.versioned_put_all", false]], "versioned_put_all() (coherence.processors static method)": [[1, "coherence.Processors.versioned_put_all", false]], "versionedput (class in coherence.processor)": [[8, "coherence.processor.VersionedPut", false]], "versionedputall (class in coherence.processor)": [[8, "coherence.processor.VersionedPutAll", false]], "when() (coherence.processor.compositeprocessor method)": [[8, "coherence.processor.CompositeProcessor.when", false]], "when() (coherence.processor.entryprocessor method)": [[8, "coherence.processor.EntryProcessor.when", false]], "xor() (coherence.filter.filter method)": [[7, "coherence.filter.Filter.Xor", false]], "xorfilter (class in coherence.filter)": [[7, "coherence.filter.XorFilter", false]]}, "objects": {"coherence": [[1, 0, 1, "", "Aggregators"], [1, 0, 1, "", "CacheOptions"], [1, 0, 1, "", "CacheStats"], [1, 0, 1, "", "Comparator"], [1, 0, 1, "", "Extractors"], [1, 0, 1, "", "Filters"], [1, 0, 1, "", "MapEntry"], [1, 0, 1, "", "NamedCache"], [1, 0, 1, "", "NamedMap"], [1, 0, 1, "", "NearCacheOptions"], [1, 0, 1, "", "Options"], [1, 0, 1, "", "Processors"], [1, 0, 1, "", "Session"], [1, 0, 1, "", "TlsOptions"]], "coherence.Aggregators": [[1, 1, 1, "", "average"], [1, 1, 1, "", "count"], [1, 1, 1, "", "distinct"], [1, 1, 1, "", "group_by"], [1, 1, 1, "", "max"], [1, 1, 1, "", "min"], [1, 1, 1, "", "priority"], [1, 1, 1, "", "record"], [1, 1, 1, "", "reduce"], [1, 1, 1, "", "script"], [1, 1, 1, "", "sum"], [1, 1, 1, "", "top"]], "coherence.CacheOptions": [[1, 1, 1, "", "__init__"], [1, 2, 1, "", "default_expiry"], [1, 2, 1, "", "near_cache_options"]], "coherence.CacheStats": [[1, 2, 1, "", "bytes"], [1, 2, 1, "", "expires"], [1, 2, 1, "", "expires_duration"], [1, 2, 1, "", "gets"], [1, 2, 1, "", "hit_rate"], [1, 2, 1, "", "hits"], [1, 2, 1, "", "misses"], [1, 2, 1, "", "misses_duration"], [1, 2, 1, "", "num_expired"], [1, 2, 1, "", "num_pruned"], [1, 2, 1, "", "prunes"], [1, 2, 1, "", "prunes_duration"], [1, 2, 1, "", "puts"], [1, 1, 1, "", "reset"], [1, 2, 1, "", "size"]], "coherence.Extractors": [[1, 1, 1, "", "extract"], [1, 1, 1, "", "identity"]], "coherence.Filters": [[1, 1, 1, "", "all"], [1, 1, 1, "", "always"], [1, 1, 1, "", "any"], [1, 1, 1, "", "array_contains"], [1, 1, 1, "", "array_contains_all"], [1, 1, 1, "", "array_contains_any"], [1, 1, 1, "", "between"], [1, 1, 1, "", "contains"], [1, 1, 1, "", "contains_all"], [1, 1, 1, "", "contains_any"], [1, 1, 1, "", "equals"], [1, 1, 1, "", "event"], [1, 1, 1, "", "greater"], [1, 1, 1, "", "greater_equals"], [1, 1, 1, "", "is_in"], [1, 1, 1, "", "is_none"], [1, 1, 1, "", "is_not_none"], [1, 1, 1, "", "less"], [1, 1, 1, "", "less_equals"], [1, 1, 1, "", "like"], [1, 1, 1, "", "negate"], [1, 1, 1, "", "never"], [1, 1, 1, "", "not_equals"], [1, 1, 1, "", "present"], [1, 1, 1, "", "regex"]], "coherence.NamedCache": [[1, 1, 1, "", "put"], [1, 1, 1, "", "put_if_absent"]], "coherence.NamedMap": [[1, 1, 1, "", "add_index"], [1, 1, 1, "", "add_map_listener"], [1, 1, 1, "", "aggregate"], [1, 1, 1, "", "clear"], [1, 1, 1, "", "contains_key"], [1, 1, 1, "", "contains_value"], [1, 1, 1, "", "destroy"], [1, 1, 1, "", "entries"], [1, 1, 1, "", "get"], [1, 1, 1, "", "get_all"], [1, 1, 1, "", "get_or_default"], [1, 1, 1, "", "invoke"], [1, 1, 1, "", "invoke_all"], [1, 1, 1, "", "is_empty"], [1, 1, 1, "", "keys"], [1, 2, 1, "", "name"], [1, 2, 1, "", "near_cache_stats"], [1, 1, 1, "", "on"], [1, 2, 1, "", "options"], [1, 1, 1, "", "put"], [1, 1, 1, "", "put_all"], [1, 1, 1, "", "put_if_absent"], [1, 1, 1, "", "release"], [1, 1, 1, "", "remove"], [1, 1, 1, "", "remove_index"], [1, 1, 1, "", "remove_map_listener"], [1, 1, 1, "", "remove_mapping"], [1, 1, 1, "", "replace"], [1, 1, 1, "", "replace_mapping"], [1, 2, 1, "", "session"], [1, 1, 1, "", "size"], [1, 1, 1, "", "truncate"], [1, 1, 1, "", "values"]], "coherence.NearCacheOptions": [[1, 1, 1, "", "__init__"], [1, 2, 1, "", "high_unit_memory"], [1, 2, 1, "", "high_units"], [1, 2, 1, "", "prune_factor"], [1, 2, 1, "", "ttl"]], "coherence.Options": [[1, 3, 1, "", "DEFAULT_ADDRESS"], [1, 3, 1, "", "DEFAULT_FORMAT"], [1, 3, 1, "", "DEFAULT_READY_TIMEOUT"], [1, 3, 1, "", "DEFAULT_REQUEST_TIMEOUT"], [1, 3, 1, "", "DEFAULT_SCOPE"], [1, 3, 1, "", "DEFAULT_SESSION_DISCONNECT_TIMEOUT"], [1, 3, 1, "", "ENV_READY_TIMEOUT"], [1, 3, 1, "", "ENV_REQUEST_TIMEOUT"], [1, 3, 1, "", "ENV_SERVER_ADDRESS"], [1, 3, 1, "", "ENV_SESSION_DISCONNECT_TIMEOUT"], [1, 1, 1, "", "__init__"], [1, 2, 1, "", "address"], [1, 2, 1, "", "channel_options"], [1, 2, 1, "", "format"], [1, 2, 1, "", "ready_timeout_seconds"], [1, 2, 1, "", "request_timeout_seconds"], [1, 2, 1, "", "scope"], [1, 2, 1, "", "session_disconnect_timeout_seconds"], [1, 2, 1, "", "tls_options"]], "coherence.Processors": [[1, 1, 1, "", "conditional_put"], [1, 1, 1, "", "conditional_put_all"], [1, 1, 1, "", "conditional_remove"], [1, 1, 1, "", "extract"], [1, 1, 1, "", "increment"], [1, 1, 1, "", "invoke_accessor"], [1, 1, 1, "", "invoke_mutator"], [1, 1, 1, "", "multiply"], [1, 1, 1, "", "nop"], [1, 1, 1, "", "preload"], [1, 1, 1, "", "script"], [1, 1, 1, "", "touch"], [1, 1, 1, "", "update"], [1, 1, 1, "", "versioned_put"], [1, 1, 1, "", "versioned_put_all"]], "coherence.Session": [[1, 1, 1, "", "__init__"], [1, 2, 1, "", "channel"], [1, 1, 1, "", "close"], [1, 2, 1, "", "closed"], [1, 2, 1, "", "format"], [1, 1, 1, "", "is_ready"], [1, 2, 1, "", "options"], [1, 2, 1, "", "scope"], [1, 2, 1, "", "session_id"]], "coherence.TlsOptions": [[1, 3, 1, "", "ENV_CA_CERT"], [1, 3, 1, "", "ENV_CLIENT_CERT"], [1, 3, 1, "", "ENV_CLIENT_KEY"], [1, 1, 1, "", "__init__"], [1, 2, 1, "", "ca_cert_path"], [1, 2, 1, "", "client_cert_path"], [1, 2, 1, "", "client_key_path"], [1, 2, 1, "", "enabled"], [1, 1, 1, "", "locked"]], "coherence.aggregator": [[2, 0, 1, "", "AbstractComparableAggregator"], [2, 0, 1, "", "AbstractDoubleAggregator"], [2, 0, 1, "", "Aggregators"], [2, 0, 1, "", "AverageAggregator"], [2, 0, 1, "", "CompositeAggregator"], [2, 0, 1, "", "CountAggregator"], [2, 0, 1, "", "DistinctValuesAggregator"], [2, 0, 1, "", "EntryAggregator"], [2, 0, 1, "", "GroupAggregator"], [2, 0, 1, "", "MaxAggregator"], [2, 0, 1, "", "MinAggregator"], [2, 0, 1, "", "PriorityAggregator"], [2, 0, 1, "", "QueryRecorder"], [2, 0, 1, "", "ReducerAggregator"], [2, 0, 1, "", "Schedule"], [2, 0, 1, "", "SumAggregator"], [2, 0, 1, "", "Timeout"], [2, 0, 1, "", "TopAggregator"]], "coherence.aggregator.AbstractComparableAggregator": [[2, 1, 1, "", "__init__"]], "coherence.aggregator.AbstractDoubleAggregator": [[2, 1, 1, "", "__init__"]], "coherence.aggregator.Aggregators": [[2, 1, 1, "", "average"], [2, 1, 1, "", "count"], [2, 1, 1, "", "distinct"], [2, 1, 1, "", "group_by"], [2, 1, 1, "", "max"], [2, 1, 1, "", "min"], [2, 1, 1, "", "priority"], [2, 1, 1, "", "record"], [2, 1, 1, "", "reduce"], [2, 1, 1, "", "script"], [2, 1, 1, "", "sum"], [2, 1, 1, "", "top"]], "coherence.aggregator.AverageAggregator": [[2, 1, 1, "", "__init__"]], "coherence.aggregator.CompositeAggregator": [[2, 1, 1, "", "__init__"]], "coherence.aggregator.CountAggregator": [[2, 1, 1, "", "__init__"]], "coherence.aggregator.DistinctValuesAggregator": [[2, 1, 1, "", "__init__"]], "coherence.aggregator.EntryAggregator": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "and_then"]], "coherence.aggregator.GroupAggregator": [[2, 1, 1, "", "__init__"]], "coherence.aggregator.MaxAggregator": [[2, 1, 1, "", "__init__"]], "coherence.aggregator.MinAggregator": [[2, 1, 1, "", "__init__"]], "coherence.aggregator.PriorityAggregator": [[2, 1, 1, "", "__init__"], [2, 2, 1, "", "execution_timeout_in_millis"], [2, 2, 1, "", "request_timeout_in_millis"], [2, 2, 1, "", "scheduling_priority"]], "coherence.aggregator.QueryRecorder": [[2, 3, 1, "", "EXPLAIN"], [2, 3, 1, "", "TRACE"], [2, 1, 1, "", "__init__"]], "coherence.aggregator.ReducerAggregator": [[2, 1, 1, "", "__init__"]], "coherence.aggregator.Schedule": [[2, 3, 1, "", "FIRST"], [2, 3, 1, "", "IMMEDIATE"], [2, 3, 1, "", "STANDARD"]], "coherence.aggregator.SumAggregator": [[2, 1, 1, "", "__init__"]], "coherence.aggregator.Timeout": [[2, 3, 1, "", "DEFAULT"], [2, 3, 1, "", "NONE"]], "coherence.aggregator.TopAggregator": [[2, 1, 1, "", "__init__"], [2, 2, 1, "", "ascending"], [2, 2, 1, "", "descending"], [2, 1, 1, "", "extract"], [2, 1, 1, "", "order_by"]], "coherence.ai": [[3, 0, 1, "", "BinaryQuantIndex"], [3, 0, 1, "", "BitVector"], [3, 0, 1, "", "ByteVector"], [3, 0, 1, "", "CosineDistance"], [3, 0, 1, "", "DistanceAlgorithm"], [3, 0, 1, "", "DocumentChunk"], [3, 0, 1, "", "FloatVector"], [3, 0, 1, "", "InnerProductDistance"], [3, 0, 1, "", "L2SquaredDistance"], [3, 0, 1, "", "QueryResult"], [3, 0, 1, "", "SimilaritySearch"], [3, 0, 1, "", "Vector"]], "coherence.ai.BinaryQuantIndex": [[3, 1, 1, "", "__init__"]], "coherence.ai.BitVector": [[3, 1, 1, "", "__init__"]], "coherence.ai.ByteVector": [[3, 1, 1, "", "__init__"]], "coherence.ai.CosineDistance": [[3, 1, 1, "", "__init__"]], "coherence.ai.DistanceAlgorithm": [[3, 1, 1, "", "__init__"]], "coherence.ai.DocumentChunk": [[3, 1, 1, "", "__init__"]], "coherence.ai.FloatVector": [[3, 1, 1, "", "__init__"]], "coherence.ai.InnerProductDistance": [[3, 1, 1, "", "__init__"]], "coherence.ai.L2SquaredDistance": [[3, 1, 1, "", "__init__"]], "coherence.ai.QueryResult": [[3, 1, 1, "", "__init__"]], "coherence.ai.SimilaritySearch": [[3, 1, 1, "", "__init__"]], "coherence.ai.Vector": [[3, 1, 1, "", "__init__"]], "coherence.comparator": [[4, 0, 1, "", "ExtractorComparator"], [4, 0, 1, "", "InverseComparator"], [4, 0, 1, "", "SafeComparator"]], "coherence.event": [[1, 0, 1, "", "MapEvent"], [1, 0, 1, "", "MapListener"]], "coherence.event.MapEvent": [[1, 2, 1, "", "description"], [1, 2, 1, "", "key"], [1, 2, 1, "", "name"], [1, 2, 1, "", "new"], [1, 2, 1, "", "old"], [1, 2, 1, "", "source"], [1, 2, 1, "", "type"]], "coherence.event.MapListener": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "on_any"], [1, 1, 1, "", "on_deleted"], [1, 1, 1, "", "on_inserted"], [1, 1, 1, "", "on_updated"], [1, 2, 1, "", "priming"], [1, 2, 1, "", "synchronous"]], "coherence.extractor": [[6, 0, 1, "", "AbstractCompositeExtractor"], [6, 0, 1, "", "ChainedExtractor"], [6, 0, 1, "", "CompositeUpdater"], [6, 0, 1, "", "Extractors"], [6, 0, 1, "", "IdentityExtractor"], [6, 0, 1, "", "UniversalExtractor"], [6, 0, 1, "", "UniversalUpdater"], [6, 0, 1, "", "ValueExtractor"], [6, 0, 1, "", "ValueManipulator"], [6, 0, 1, "", "ValueUpdater"]], "coherence.extractor.AbstractCompositeExtractor": [[6, 1, 1, "", "__init__"]], "coherence.extractor.ChainedExtractor": [[6, 1, 1, "", "__init__"]], "coherence.extractor.CompositeUpdater": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "get_extractor"], [6, 1, 1, "", "get_updator"]], "coherence.extractor.Extractors": [[6, 1, 1, "", "extract"], [6, 1, 1, "", "identity"]], "coherence.extractor.IdentityExtractor": [[6, 1, 1, "", "__init__"]], "coherence.extractor.UniversalExtractor": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "create"]], "coherence.extractor.UniversalUpdater": [[6, 1, 1, "", "__init__"]], "coherence.extractor.ValueExtractor": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "and_then"], [6, 1, 1, "", "compose"], [6, 1, 1, "", "extract"]], "coherence.extractor.ValueManipulator": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "get_extractor"], [6, 1, 1, "", "get_updator"]], "coherence.extractor.ValueUpdater": [[6, 1, 1, "", "__init__"]], "coherence.filter": [[7, 0, 1, "", "AllFilter"], [7, 0, 1, "", "AlwaysFilter"], [7, 0, 1, "", "AndFilter"], [7, 0, 1, "", "AnyFilter"], [7, 0, 1, "", "ArrayFilter"], [7, 0, 1, "", "BetweenFilter"], [7, 0, 1, "", "ComparisonFilter"], [7, 0, 1, "", "ContainsAllFilter"], [7, 0, 1, "", "ContainsAnyFilter"], [7, 0, 1, "", "ContainsFilter"], [7, 0, 1, "", "EqualsFilter"], [7, 0, 1, "", "ExtractorFilter"], [7, 0, 1, "", "Filter"], [7, 0, 1, "", "Filters"], [7, 0, 1, "", "GreaterEqualsFilter"], [7, 0, 1, "", "GreaterFilter"], [7, 0, 1, "", "InFilter"], [7, 0, 1, "", "IsNoneFilter"], [7, 0, 1, "", "IsNotNoneFilter"], [7, 0, 1, "", "LessFilter"], [7, 0, 1, "", "LikeFilter"], [7, 0, 1, "", "MapEventFilter"], [7, 0, 1, "", "NeverFilter"], [7, 0, 1, "", "NotEqualsFilter"], [7, 0, 1, "", "NotFilter"], [7, 0, 1, "", "OrFilter"], [7, 0, 1, "", "PredicateFilter"], [7, 0, 1, "", "PresentFilter"], [7, 0, 1, "", "RegexFilter"], [7, 0, 1, "", "XorFilter"]], "coherence.filter.AllFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.AlwaysFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.AndFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.AnyFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.ArrayFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.BetweenFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.ComparisonFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.ContainsAllFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.ContainsAnyFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.ContainsFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.EqualsFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.ExtractorFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.Filter": [[7, 1, 1, "", "And"], [7, 1, 1, "", "Or"], [7, 1, 1, "", "Xor"]], "coherence.filter.Filters": [[7, 1, 1, "", "all"], [7, 1, 1, "", "always"], [7, 1, 1, "", "any"], [7, 1, 1, "", "array_contains"], [7, 1, 1, "", "array_contains_all"], [7, 1, 1, "", "array_contains_any"], [7, 1, 1, "", "between"], [7, 1, 1, "", "contains"], [7, 1, 1, "", "contains_all"], [7, 1, 1, "", "contains_any"], [7, 1, 1, "", "equals"], [7, 1, 1, "", "event"], [7, 1, 1, "", "greater"], [7, 1, 1, "", "greater_equals"], [7, 1, 1, "", "is_in"], [7, 1, 1, "", "is_none"], [7, 1, 1, "", "is_not_none"], [7, 1, 1, "", "less"], [7, 1, 1, "", "less_equals"], [7, 1, 1, "", "like"], [7, 1, 1, "", "negate"], [7, 1, 1, "", "never"], [7, 1, 1, "", "not_equals"], [7, 1, 1, "", "present"], [7, 1, 1, "", "regex"]], "coherence.filter.GreaterEqualsFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.GreaterFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.InFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.IsNoneFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.IsNotNoneFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.LessFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.LikeFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.MapEventFilter": [[7, 3, 1, "", "ALL"], [7, 3, 1, "", "DELETED"], [7, 3, 1, "", "INSERTED"], [7, 3, 1, "", "KEY_SET"], [7, 3, 1, "", "UPDATED"], [7, 3, 1, "", "UPDATED_ENTERED"], [7, 3, 1, "", "UPDATED_LEFT"], [7, 3, 1, "", "UPDATED_WITHIN"], [7, 1, 1, "", "__init__"], [7, 1, 1, "", "from_filter"], [7, 1, 1, "", "from_mask"]], "coherence.filter.NeverFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.NotEqualsFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.NotFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.OrFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.PredicateFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.PresentFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.RegexFilter": [[7, 1, 1, "", "__init__"]], "coherence.filter.XorFilter": [[7, 1, 1, "", "__init__"]], "coherence.processor": [[8, 0, 1, "", "CompositeProcessor"], [8, 0, 1, "", "ConditionalProcessor"], [8, 0, 1, "", "ConditionalPut"], [8, 0, 1, "", "ConditionalPutAll"], [8, 0, 1, "", "ConditionalRemove"], [8, 0, 1, "", "EntryProcessor"], [8, 0, 1, "", "ExtractorProcessor"], [8, 0, 1, "", "MethodInvocationProcessor"], [8, 0, 1, "", "NullProcessor"], [8, 0, 1, "", "NumberIncrementor"], [8, 0, 1, "", "NumberMultiplier"], [8, 0, 1, "", "PreloadRequest"], [8, 0, 1, "", "Processors"], [8, 0, 1, "", "PropertyManipulator"], [8, 0, 1, "", "PropertyProcessor"], [8, 0, 1, "", "ScriptProcessor"], [8, 0, 1, "", "TouchProcessor"], [8, 0, 1, "", "UpdaterProcessor"], [8, 0, 1, "", "VersionedPut"], [8, 0, 1, "", "VersionedPutAll"]], "coherence.processor.CompositeProcessor": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "and_then"], [8, 1, 1, "", "when"]], "coherence.processor.ConditionalProcessor": [[8, 1, 1, "", "__init__"]], "coherence.processor.ConditionalPut": [[8, 1, 1, "", "__init__"]], "coherence.processor.ConditionalPutAll": [[8, 1, 1, "", "__init__"]], "coherence.processor.ConditionalRemove": [[8, 1, 1, "", "__init__"]], "coherence.processor.EntryProcessor": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "and_then"], [8, 1, 1, "", "when"]], "coherence.processor.ExtractorProcessor": [[8, 1, 1, "", "__init__"]], "coherence.processor.MethodInvocationProcessor": [[8, 1, 1, "", "__init__"]], "coherence.processor.NullProcessor": [[8, 1, 1, "", "__init__"]], "coherence.processor.NumberIncrementor": [[8, 1, 1, "", "__init__"]], "coherence.processor.NumberMultiplier": [[8, 1, 1, "", "__init__"]], "coherence.processor.PreloadRequest": [[8, 1, 1, "", "__init__"]], "coherence.processor.Processors": [[8, 1, 1, "", "conditional_put"], [8, 1, 1, "", "conditional_put_all"], [8, 1, 1, "", "conditional_remove"], [8, 1, 1, "", "extract"], [8, 1, 1, "", "increment"], [8, 1, 1, "", "invoke_accessor"], [8, 1, 1, "", "invoke_mutator"], [8, 1, 1, "", "multiply"], [8, 1, 1, "", "nop"], [8, 1, 1, "", "preload"], [8, 1, 1, "", "script"], [8, 1, 1, "", "touch"], [8, 1, 1, "", "update"], [8, 1, 1, "", "versioned_put"], [8, 1, 1, "", "versioned_put_all"]], "coherence.processor.PropertyManipulator": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "get_extractor"], [8, 1, 1, "", "get_updator"]], "coherence.processor.PropertyProcessor": [[8, 1, 1, "", "__init__"]], "coherence.processor.ScriptProcessor": [[8, 1, 1, "", "__init__"]], "coherence.processor.TouchProcessor": [[8, 1, 1, "", "__init__"]], "coherence.processor.UpdaterProcessor": [[8, 1, 1, "", "__init__"]], "coherence.processor.VersionedPut": [[8, 1, 1, "", "__init__"]], "coherence.processor.VersionedPutAll": [[8, 1, 1, "", "__init__"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute"}, "terms": {"": [1, 2, 4, 5, 6, 7, 8, 10, 12, 13, 16, 17], "0": [0, 1, 2, 7, 9, 10, 11, 12, 13, 15, 16, 17], "06": 13, "09": [1, 10, 13], "0ebd49": 16, "0m": 10, "1": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 15], "10": 11, "1000": [10, 16], "100000": 10, "11": 13, "111": [0, 11], "112": 11, "113": 10, "12": 12, "122m": 10, "14": 13, "1408": [1, 9, 13, 17], "15": 15, "16": 7, "1669671978888": 16, "17": [9, 15], "1992": 7, "1_000": 10, "1_000_000": 10, "2": [0, 1, 2, 7, 11, 12, 13], "20": [10, 15], "2000": 10, "2023": [0, 9, 11, 12, 13, 15], "2024": [0, 10], "2025": 13, "20_000": 10, "21": [9, 15], "22": 13, "2206": 13, "24": [1, 10, 13], "25": [10, 12, 15], "250": 1, "28": 0, "29": [1, 7], "3": [0, 3, 13], "30": [1, 15, 17], "32": 7, "34": 9, "36": 0, "37": 11, "3755": 10, "38": 0, "39": 12, "4": [0, 1, 7, 10, 15], "40": [0, 15], "41": 15, "4246m": 10, "44": 11, "4444": 17, "45": 12, "46": [12, 15], "47": 0, "5": [0, 2], "50": [0, 9, 11, 12, 15], "51": 11, "53": 0, "54": 12, "55": 15, "56": 0, "57": 11, "58": 11, "6": [10, 16], "60": [0, 12], "62": 11, "66": 12, "681464": 10, "7": 7, "71": 12, "73m": 10, "77": 12, "8": [1, 7], "80": 10, "9": [12, 13], "9075": 7, "96": 10, "99": 10, "99000": 10, "A": [0, 1, 2, 5, 6, 7, 8, 10, 11, 15, 17], "AND": [1, 7], "And": [7, 15], "Being": 15, "By": [2, 10], "For": [0, 1, 2, 6, 8, 12, 13, 16], "If": [1, 2, 6, 8, 10, 13, 15, 16, 17], "In": [2, 7, 8, 12, 16], "It": [1, 3, 6, 16, 17], "No": [1, 8], "ONE": 9, "OR": [1, 7], "One": 1, "Or": 7, "Such": 1, "That": 16, "The": [0, 1, 2, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17], "Then": [2, 12], "There": 2, "These": 1, "To": [10, 13, 14, 16, 17], "With": 16, "_": [1, 7, 10], "__eq__": 16, "__hash__": 16, "__init__": [1, 2, 3, 6, 7, 8, 16], "__str__": 16, "abc": [1, 2, 3, 6, 7, 8], "abil": [2, 11, 12, 13], "abl": [15, 17], "about": [13, 16], "abov": [16, 17], "absenc": 1, "abstract": [1, 2, 6], "abstractaggreg": 2, "abstractevolv": 3, "accept": [1, 6, 10], "access": [1, 11, 13, 15, 16], "accessor": 16, "accomplish": 1, "accord": 7, "accumul": [1, 10], "achiev": 16, "across": [0, 1], "act": [1, 13], "activ": 2, "actual": [0, 1, 2, 6], "ad": [1, 5, 12, 15], "add": [1, 11, 12], "add_index": 1, "add_map_listen": [1, 12], "addit": [1, 2, 8, 12], "addition": 2, "addmaplisten": 1, "addr": 17, "address": [1, 17], "advanc": 2, "advantag": 7, "affect": [1, 7], "affili": [0, 9, 10, 11, 12, 13, 15], "affin": 2, "afilt": 2, "after": [1, 2, 6, 8, 10, 13], "ag": [0, 8, 11, 15], "against": [0, 1, 2, 7, 8, 9, 10, 11, 15], "agent": [1, 2, 8], "aggreg": [3, 13], "ai": [1, 13], "algorithm": [1, 3], "alia": 16, "alias": 16, "all": [0, 1, 2, 7, 8, 10, 11, 12, 15, 17], "allow": [1, 2, 8, 9, 10, 13, 15], "allow_insert": [1, 8], "alreadi": [1, 8, 16], "also": [1, 2, 6, 7, 10, 11, 16, 17], "alwai": [1, 2, 7, 12], "amount": [1, 8], "an": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17], "analog": 2, "analysi": 3, "and_then": [2, 6, 8], "angl": 3, "ani": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 15, 16], "annot": 16, "anoth": [1, 4, 7], "answer": 2, "anyth": [1, 6], "aperson": 8, "api": [2, 8, 13], "append": 11, "appli": [1, 2, 3, 6, 7, 8], "applic": [13, 16], "approach": 7, "appropri": 16, "ar": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 17], "arbitrari": [1, 6], "arg": [1, 2, 8], "argument": [1, 2, 6, 8, 10, 17], "arrai": [1, 2, 3, 6, 7, 8], "array_contain": [1, 7], "array_contains_al": [1, 7], "array_contains_ani": [1, 7], "arriv": 2, "ascend": 2, "asid": 1, "ask": 13, "assembl": 1, "associ": [1, 3, 15, 16], "assum": [1, 2, 6, 8, 17], "assumpt": 1, "async": [0, 1, 9, 10, 11, 12, 13, 15], "asyncgener": 1, "asyncio": [0, 1, 9, 10, 11, 12, 13, 15, 17], "asynciter": 1, "attempt": 10, "attribut": [2, 7, 8, 15, 16], "automat": 1, "avail": [1, 2, 3, 10, 13], "averag": [0, 1, 2, 10], "avg": 2, "avg_under_forti": 0, "avoid": [1, 8, 15, 17], "await": [0, 1, 9, 10, 11, 12, 13, 15, 17], "awar": 7, "b": [1, 6], "back": [1, 2, 8], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 15], "basequeryresult": 3, "basic": [10, 16], "bear": 0, "becom": 2, "been": [1, 5, 8, 10, 17], "befor": [1, 6, 8, 13], "begin": [10, 16], "begin_out": 10, "behavior": [1, 16], "behind": 1, "being": [1, 16], "belong": [1, 2, 7], "below": 14, "best": 16, "between": [1, 3, 7, 15, 16], "bilbo": [0, 11], "bill": 15, "binari": [3, 7], "bind": [16, 17], "bit": 3, "blob": 1, "bool": [1, 2, 3, 5, 7, 8, 16], "boolean": [1, 16], "both": [6, 7], "bound": [1, 7], "boundari": [2, 5], "box": [0, 11, 15, 16], "bread": 16, "brute": 3, "brute_forc": 3, "buckland": 15, "built": 15, "bullet": 17, "burglar": 0, "by_pag": 1, "byte": [1, 3, 10], "byte_arrai": 3, "c": [0, 1, 6, 9, 10, 11, 12, 13, 15], "ca": [1, 17], "ca_cert_path": [1, 17], "cach": [1, 2, 3, 5, 8, 12, 13, 17], "cache_near": 10, "cache_opt": 10, "cache_remot": 10, "cache_se": 10, "cache_seed_kei": 10, "cacheopt": 10, "cacheord": 2, "cachestat": 10, "calcul": [0, 1, 2, 3, 8], "call": [1, 2, 5, 6, 8, 10, 16], "callabl": [1, 5], "callback": [1, 5], "caller": [1, 6, 7, 8], "camel": 16, "can": [0, 1, 2, 3, 7, 10, 11, 13, 16, 17], "care": 11, "case": [1, 2, 6, 7, 8, 16, 17], "cast": 16, "ce": [3, 10, 13], "certif": [1, 17], "chain": [1, 6], "chainedextractor": [2, 7], "chang": [1, 5, 7, 12], "channel": [1, 13, 17], "channel_argu": 1, "channel_opt": [1, 17], "channelopt": 1, "charact": [1, 7], "characterist": [1, 2], "check": [1, 7, 8], "chunk": 3, "circuit": 7, "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16], "classmethod": [1, 6, 7], "classnam": 16, "classpath": 16, "claus": 2, "clear": [0, 1, 10, 11, 12, 13, 15], "client": [0, 2, 7, 8, 11, 14, 15, 16, 17], "client_cert_path": [1, 17], "client_key_path": [1, 17], "close": [0, 1, 9, 10, 11, 12, 13, 15], "closest": 3, "cluster": [1, 8, 9, 10, 11, 16], "code": [1, 2, 11], "coher": [0, 9, 10, 11, 12, 14, 15, 16, 17], "coherence_client_request_timeout": [1, 17], "coherence_ready_timeout": 1, "coherence_server_address": [1, 17], "coherence_session_disconnect_timeout": 1, "coherence_tls_": 17, "coherence_tls_certs_path": [1, 17], "coherence_tls_client_cert": [1, 17], "coherence_tls_client_kei": [1, 17], "collect": [1, 2, 7, 8], "com": [0, 1, 9, 10, 11, 12, 13, 15, 16, 17], "combin": [2, 7], "come": [0, 2, 13], "comma": [1, 6], "commerci": 13, "common": [2, 8, 16], "commun": 13, "compar": [2, 7], "comparison": 4, "complet": [1, 2, 10, 16], "compos": [6, 7], "composit": [1, 6, 7], "compris": [1, 2, 8], "concept": [2, 17], "concurr": [1, 8, 11], "condit": [1, 7, 8], "condition": 8, "conditional_put": [1, 8], "conditional_put_al": [1, 8], "conditional_remov": [1, 8], "conditionalprocessor": [1, 7], "conditionalput": 1, "conditionalremov": 1, "configur": [1, 2, 10, 13, 17], "configurablecachefactori": 1, "connect": [1, 9, 13, 17], "consid": 6, "constant": 2, "construct": [1, 2, 3, 6, 7, 8, 16, 17], "constructor": [1, 6, 8, 16, 17], "consult": 13, "consum": [1, 10], "consumpt": 1, "contain": [1, 2, 6, 7, 13], "contains_al": [1, 7], "contains_ani": [1, 7], "contains_kei": [1, 13], "contains_valu": [1, 13], "content": [1, 5, 7], "continu": 10, "contract": [1, 7], "contriv": 16, "control": [1, 2, 8, 10, 11, 17], "convent": 8, "convert": 16, "copi": 1, "copyright": [0, 9, 10, 11, 12, 13, 15], "correctli": 13, "correspond": [1, 2, 6, 7, 8], "cosin": 3, "cost": [1, 2, 8], "could": [1, 2, 5, 6, 8], "count": [0, 1, 2], "cours": 16, "cover": [2, 16], "creat": [0, 1, 2, 3, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17], "created_at": 16, "createdat": 16, "creation": 16, "criteria": [1, 7], "crud": 9, "current": [1, 7, 8, 9, 10, 17], "currenttimemilli": 16, "custom": [3, 10], "d": 13, "data": [0, 1, 2, 9, 10, 11, 15, 16, 17], "databas": 1, "dataclass": [0, 11, 15], "date": 16, "deadlin": 1, "decim": [0, 1, 2, 8], "decor": 16, "def": [0, 9, 10, 11, 12, 13, 15, 16], "default": [1, 2, 10, 13, 17], "default_address": 1, "default_expiri": 1, "default_format": [1, 17], "default_ready_timeout": 1, "default_request_timeout": [1, 17], "default_scop": [1, 17], "default_session_disconnect_timeout": 1, "default_valu": 1, "defaultvalu": 1, "defin": [1, 5, 7, 11, 12, 15, 16, 17], "deleg": 4, "delet": [1, 5, 7, 12, 13], "delimit": [2, 6, 7], "deliv": 1, "demonstr": [0, 9, 10, 11, 12, 15, 16], "depend": 8, "deriv": 0, "descend": 2, "describ": 16, "descript": [1, 5, 16], "deseri": [15, 16, 17], "desir": [16, 17], "destroi": [1, 5, 12, 13], "detail": [8, 9, 13], "detect": 1, "determin": [3, 17], "develop": 13, "dict": [0, 1, 2, 3, 8, 9, 10], "did": [1, 8], "differ": [1, 5, 17], "direct": [1, 2, 3, 8], "disabl": [1, 17], "disclosur": 13, "disconnect": [1, 13], "discov": 1, "discuss": 10, "disk": 1, "dispatch": 1, "displai": 11, "distanc": 3, "distinct": [0, 1, 2], "distinct_hobbi": 0, "distinctvalu": 2, "do": [1, 2, 10, 14], "do_run": [0, 9, 10, 11, 12, 15], "doc": 7, "docker": 13, "document": [3, 9], "doe": [1, 6, 8, 17], "doesn": 15, "don": 0, "done": [8, 10], "dot": [2, 6, 7], "doubl": 2, "down": [1, 10], "dsl": [1, 2], "due": [1, 10], "dump": 2, "durat": [10, 11], "dure": [1, 7, 8], "e": [1, 2, 3, 6, 7, 8, 10, 12], "e_": 7, "each": [0, 1, 2, 8, 11, 12], "easili": 1, "ed": 7, "edit": 13, "effect": [1, 8, 10], "effici": [8, 17], "egg": 16, "either": [1, 6, 7, 8, 10], "element": 1, "els": 1, "email": 13, "emit": [1, 7], "empti": 2, "enabl": [1, 17], "encourag": [1, 2], "end": 6, "end_out": 10, "endpoint": [1, 17], "enforc": 8, "enough": 12, "ensur": [2, 10, 12, 13], "entir": [1, 2, 8], "entri": [0, 1, 2, 3, 5, 7, 8, 10, 12, 13, 15, 16], "entry_delet": [1, 5], "entry_insert": [1, 5], "entry_upd": [1, 5], "entryaggreg": [1, 3], "entryprocessor": [1, 11, 13], "enum": [2, 5], "env_ca_cert": 1, "env_client_cert": 1, "env_client_kei": 1, "env_ready_timeout": 1, "env_request_timeout": 1, "env_server_address": 1, "env_session_disconnect_timeout": 1, "environ": [1, 17], "equal": [1, 2, 7, 15, 16], "equat": 16, "equival": [1, 7, 16], "escap": [1, 7], "escape_char": 7, "especi": [1, 2], "estim": [1, 2], "evalu": [1, 2, 4, 6, 7, 8], "even": [8, 15, 16], "event": [1, 7, 13], "everi": 1, "everyth": 13, "exactli": [6, 7], "exampl": [0, 1, 2, 6, 8, 9, 10, 11, 12, 15, 16, 17], "exce": 10, "exceed": [1, 10], "except": [1, 6, 7, 16], "exclus": [10, 11], "execut": [0, 1, 2, 3, 8, 11, 15], "execution_timeout": [1, 2], "execution_timeout_in_milli": 2, "executiontimeout": 2, "exist": [1, 2, 7, 8], "expect": 1, "expir": [1, 10], "expires_dur": [1, 10], "expiri": [1, 8, 10], "explain": [1, 2], "explicit": [1, 8], "explicitli": [1, 2], "express": [1, 6, 7, 8], "extern": 1, "extract": [1, 2, 3, 4, 6, 7, 8], "extractor": [2, 3, 4, 7, 8], "extractor_or_method": [1, 7], "extractor_or_properti": [1, 2, 3], "extractorprocessor": 1, "extractors_or_method": 6, "f": 10, "factor": [1, 3, 8], "factori": [1, 2], "fail": 1, "fairli": 16, "fals": [1, 2, 3, 5, 7, 8, 16, 17], "familiar": 13, "fast": 1, "featur": [0, 1, 2, 10, 11], "feedback": 13, "field": [6, 16], "file": 16, "filter": [0, 2, 3, 6, 8, 12, 13, 15], "filterleft": 7, "filterright": 7, "final": [0, 1, 6, 9, 11, 12, 15], "find": 15, "fine": [8, 16], "fire": 7, "first": [2, 6, 10], "fit": 15, "flag": [1, 7, 8], "flexibl": 8, "float": [1, 3, 8], "float_arrai": 3, "foe": 17, "follow": [0, 1, 2, 6, 9, 10, 11, 12, 13, 15, 16, 17], "forc": 3, "form": [1, 2, 16], "format": [1, 16, 17], "found": [1, 10], "fragment": 7, "frequent": 1, "frodo": [0, 11], "frogmorton": 15, "from": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17], "from_field_or_method": 6, "from_filt": 7, "from_mask": 7, "from_rang": [1, 7], "front": 2, "full": 16, "function": [1, 2, 6, 8, 16], "functool": 10, "further": [1, 2], "futur": 11, "g": [1, 2, 6], "gather": 10, "gener": [1, 2, 5, 6, 7, 8, 12, 17], "genson": 16, "get": [1, 6, 8, 9, 10, 11, 13, 16], "get_al": [1, 10, 11, 13], "get_all_task": 10, "get_cach": [1, 10, 13], "get_extractor": [6, 8], "get_map": [0, 9, 10, 11, 12, 15], "get_or_default": [1, 13], "get_upd": [6, 8], "getal": 2, "getclass": 16, "getcomplet": 16, "getcreatedat": 16, "getcreatedatd": 16, "getdescript": 16, "getid": 16, "getter": 8, "ghcr": 13, "github": [1, 13], "give": 13, "given": [1, 2, 3, 5, 7, 8, 10, 12, 15], "glossari": 1, "go": [1, 16], "got": 13, "graal": 8, "great": 15, "greater": [0, 1, 7, 12], "greater_equ": [1, 7], "greaterequalfilt": 7, "greaterequalsfilt": 1, "greaterfilt": 1, "grid": [0, 11], "group": [1, 2], "group_bi": [0, 1, 2], "groupaggreg": 1, "grpc": [1, 13, 17], "grpc_type": 1, "grpcproxi": 13, "guid": 13, "h": 1, "ha": [1, 2, 5, 8, 10, 11, 17], "handi": 0, "handl": 7, "hash": 16, "hashcod": 16, "have": [1, 2, 6, 7, 8, 10, 13, 16, 17], "hear": 13, "held": [1, 10], "hello": 13, "here": [10, 13, 16], "hex_str": 3, "hexadecim": 3, "high": [1, 10], "high_unit": [1, 10], "high_unit_memori": 1, "high_units_memori": [1, 10], "hit": [1, 10], "hit_rat": [1, 10], "hobbi": 0, "hobbit": [0, 11, 15], "hobbit2": 11, "hobbiton": 15, "hold": 1, "home": 15, "host": 1, "how": [1, 2, 10, 11, 13, 16], "howev": [2, 16], "html": 1, "http": [0, 1, 9, 10, 11, 12, 13, 15], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17], "id": [0, 1, 11, 15, 16], "idempot": 1, "ident": [1, 6], "identifi": [1, 8, 9], "identityextractor": [1, 2, 8], "idl": 2, "iec": 7, "ignor": [1, 3, 6], "ignore_cas": [1, 7], "imag": 13, "immedi": [1, 2], "impact": [10, 11], "impl": 1, "implement": [1, 2, 4, 6, 7, 8, 16], "impli": [1, 2, 8], "import": [0, 1, 2, 9, 10, 11, 12, 13, 15, 16, 17], "impos": 1, "improv": 13, "includ": [1, 2, 7, 13, 15, 16], "include_lower_bound": [1, 7], "include_upper_bound": [1, 7], "inclus": [1, 7], "increment": [1, 8, 11], "incur": [1, 8], "indefinit": 2, "independ": [1, 2], "index": [1, 3, 7, 13, 15], "indic": [1, 2, 5, 7, 8], "individu": [1, 2, 8], "inequ": [1, 7], "inf": 16, "infilt": 1, "inform": [1, 2], "inner": 3, "input": [1, 6], "ins_filt": 12, "insensit": [1, 7], "insert": [1, 5, 7, 8, 10, 11, 12, 13, 15, 16], "instanc": [1, 2, 3, 6, 7, 8, 10, 16, 17], "instant": 16, "instead": [1, 2, 8, 16], "int": [0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 15, 16], "int_arrai": 3, "intend": 7, "intenum": 2, "interceptor": [1, 8], "interest": [0, 7], "interfac": [1, 2, 5, 8, 13], "interoper": 16, "intersect": 2, "invalid": 1, "invers": 2, "invert": 8, "invit": 13, "invoc": [1, 6, 7, 8, 12, 17], "invocablemap": 8, "invok": [1, 2, 5, 6, 7, 8, 10, 11], "invoke_accessor": [1, 8], "invoke_al": [1, 11], "invoke_mut": [1, 8], "invokeal": 8, "io": [1, 13, 16], "ipv4": 1, "is_empti": [1, 13], "is_in": [1, 7, 15], "is_non": [1, 7], "is_not_non": [1, 7], "is_readi": 1, "isinst": 16, "isn": [10, 16], "isnonefilt": 1, "isnotnonefilt": 1, "iso": 7, "issu": 13, "item": [0, 7], "iter": [1, 10], "its": [0, 1, 6, 8, 9, 10, 11, 12, 13, 15, 16], "itself": [1, 6], "j": [1, 8], "jakarta": 16, "java": [1, 2, 7, 8, 13, 16], "javabean": [6, 8], "javascript": [1, 8, 16], "join": 13, "json": [1, 2, 13, 16, 17], "jsonbindingexcept": 16, "jsonbproperti": 16, "jsonbtransi": 16, "judici": 2, "just": [6, 16], "k": [1, 2, 3, 5, 7, 8, 13], "k1": 13, "kei": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 15, 17], "key_set": 7, "keyset": 7, "kick": 0, "knob": 10, "knowledg": 2, "known": 16, "l2": 3, "lambda": [10, 12], "languag": [1, 2, 8, 13, 16], "larger": 12, "later": [10, 13], "least": [1, 10], "leav": 7, "left": [6, 7], "length": [1, 2, 6, 12], "less": [0, 1, 4, 7], "less_equ": [1, 7], "lessequalsfilt": [1, 7], "lessfilt": 1, "let": [2, 16], "librari": 1, "licens": [0, 9, 10, 11, 12, 15], "lieu": [1, 2], "lifecycl": [5, 12, 13], "like": [1, 7, 9, 13], "likefilt": 1, "limit": [0, 3, 12, 13], "line": [0, 9, 11, 12, 15], "link": [1, 2, 6, 7, 16], "list": [0, 1, 2, 3, 6, 7, 10, 11, 15, 16], "listen": [1, 5, 7, 12, 13], "listener1": 12, "listener_for": 1, "lite": 1, "live": [1, 10, 15], "load": 1, "loader": [1, 8], "local": [1, 5, 10, 13], "local_cach": 1, "localcach": 1, "localdatetim": 16, "localhost": [1, 9, 17], "lock": [1, 8], "log": 13, "logic": [1, 7, 10], "long": [1, 16], "longer": [2, 7], "loop": 12, "love": 13, "lower": [1, 2, 7], "m": [10, 13, 14], "made": [1, 10, 12], "magnitud": [1, 8], "mai": [1, 2, 5, 7, 8, 10, 16, 17], "make": [1, 2, 7, 10], "manag": [1, 17], "mani": [1, 10], "manipul": [8, 13], "map": [1, 2, 5, 6, 7, 8, 9, 12, 13, 16, 17], "map_destroi": 5, "map_releas": 5, "map_trunc": 5, "mapentri": 8, "mapev": 7, "mapeventfilt": 12, "mapeventmessag": [1, 5], "mapeventrespons": [1, 5], "mapeventtyp": 1, "maplifecycleev": [1, 12], "maplisten": [7, 12], "mark": [1, 10, 16], "marshal": 17, "mask": [1, 7], "master": 1, "match": [1, 7, 8, 17], "max": [0, 1, 2, 10], "max_result": 3, "maximum": [1, 2, 3, 10], "mean": [1, 8, 10, 17], "measur": 3, "member": 16, "memori": [1, 10], "meriadoc": 0, "meta": 16, "metadata": [3, 16], "method": [1, 2, 6, 7, 8, 16], "method_nam": [1, 8], "method_or_extractor": 6, "methodinvocationprocessor": 1, "methodinvoctionprocessor": 8, "milk": 16, "milli": [1, 10], "millisecond": 2, "min": [1, 2], "minimum": [1, 2], "miss": [1, 10], "misses_dur": [1, 10], "mistakenli": 10, "model": [15, 16], "modif": 11, "modifi": [1, 6, 8], "modul": [2, 5, 13], "monitor": 10, "more": [1, 2, 6, 7, 8, 9, 11, 15], "most": [1, 2], "move": 11, "much": 11, "multi": [1, 6, 8], "multiextractor": 2, "multipl": [1, 2, 6, 8, 16], "multipli": [1, 8], "must": [1, 2, 6, 7, 8, 13, 16, 17], "mutat": [1, 8, 13], "mutual": 10, "my": 9, "n": [1, 2, 7, 8, 12], "nad": 12, "name": [0, 1, 2, 5, 6, 7, 8, 10, 11, 15, 16], "name_or_manipul": [1, 8], "named_map": [0, 9, 11, 12, 15], "namedcach": [9, 10, 13, 17], "namedmap": [0, 2, 5, 7, 8, 9, 10, 11, 12, 15], "natur": [1, 2], "near_cache_opt": [1, 10], "near_cache_stat": [1, 10], "near_opt": 10, "nearcacheopt": 10, "necessari": 13, "need": [0, 1, 2, 8, 11, 14, 15, 16], "negat": [1, 7], "network": [1, 8, 13], "never": [1, 7], "neverfilt": 1, "new": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17], "new_valu": 1, "next": [2, 6, 8], "nnamedmap": 12, "non": [2, 4], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16], "nop": [1, 8], "not_equ": [1, 7], "note": [2, 3, 16, 17], "notequalsfilt": 1, "notfilt": [1, 8], "noth": [1, 8], "notic": 16, "notif": [1, 7, 12], "notifi": 13, "now": [7, 10, 17], "null": [1, 2, 6, 7, 8, 16], "num": 10, "num_entri": 10, "num_expir": [1, 10], "num_hobbit": 15, "num_prun": [1, 10], "number": [0, 1, 2, 3, 7, 8, 10], "numberincrementor": 1, "numbermultipli": 1, "numer": [1, 2, 8], "o": 16, "object": [0, 1, 2, 3, 6, 7, 8, 13, 16, 17], "obtain": [1, 2, 9, 10], "obvious": 8, "occur": [1, 2, 5, 12], "ofepochmilli": 16, "ofinst": 16, "often": [1, 3], "old": [1, 5, 7, 8], "old_valu": 1, "older": [0, 10], "oldest": 0, "on_ani": [1, 5, 12], "on_delet": [1, 5], "on_insert": [1, 5], "on_upd": [1, 5], "onc": [1, 10, 12, 17], "one": [1, 2, 5, 6, 8, 9, 11, 12, 13, 14, 15], "ones": [8, 15], "onli": [1, 2, 6, 7, 8, 10, 11, 12, 13, 16, 17], "op": 7, "oper": [0, 1, 2, 7, 8, 9, 10, 11, 13, 15], "opt": 17, "optim": [1, 15], "option": [2, 3, 6, 8, 10, 17], "oracl": [0, 9, 10, 11, 12, 15, 16], "order": [1, 2, 8, 16], "order_bi": 2, "ordereddict": 3, "origin": [1, 5], "oss": [0, 9, 10, 11, 12, 13, 15], "other": [2, 7, 13, 16, 17], "otherwis": [1, 5, 8, 16], "our": 13, "out": [0, 1, 2, 11, 15, 16], "output": 10, "over": [0, 1, 8, 11], "over_forti": 0, "over_sampling_factor": 3, "overrid": [2, 16], "overridden": 10, "overriden": 16, "oversampl": 3, "own": [1, 15], "p": 13, "packag": [14, 16], "page": [1, 13], "pair": [1, 6], "parallel": 1, "param": [1, 6, 8, 16], "paramet": [1, 2, 3, 5, 6, 7, 8], "part": [1, 2, 6], "partial": 2, "particular": [2, 7, 12, 16], "partit": 2, "pass": [1, 2, 6, 7, 8, 12, 16, 17], "path": [1, 17], "pattern": [1, 2, 7, 8], "payload": 16, "per": 17, "percentag": 1, "peregrin": 0, "perform": [1, 2, 3, 8], "period": [1, 6], "permiss": [0, 9, 10, 11, 12, 13, 15], "persist": 1, "person": 10, "person_data": 0, "pertain": 12, "pick": 1, "pip": [13, 14], "place": [1, 10], "pleas": 13, "pof": 16, "point": [3, 5], "popul": 10, "port": [1, 13], "portableobject": 16, "portion": 2, "posit": 1, "possibl": [1, 5, 6, 8, 10, 12, 16, 17], "possibli": [1, 8], "post_incr": [1, 8], "post_multipl": [1, 8], "predefin": [1, 7], "predic": [2, 7], "prefix": [6, 8], "preload": [1, 8], "preloadrequest": 1, "presenc": 1, "present": [1, 2, 7, 8, 15, 16], "presentfilt": [1, 8], "prevent": 1, "previou": [1, 6], "previous": [1, 7, 16], "prime": [1, 5], "print": [0, 1, 2, 9, 10, 11, 12, 13, 15], "prioriti": [1, 2], "priorityagg": 2, "priorityaggreg": 1, "privat": 16, "process": [1, 2, 8, 13], "processor": [7, 11], "produc": [1, 2], "product": 3, "programmat": 17, "progress": [1, 12], "project": 13, "properli": 10, "properti": [1, 2, 5, 6, 8, 10, 16], "property_nam": [2, 4, 8], "provid": [1, 2, 6, 8, 10, 11, 12, 16, 17], "proxi": [1, 13, 16, 17], "prune": [1, 10], "prune_factor": [1, 10], "prunes_dur": [1, 10], "public": [13, 16], "pull": 13, "purpos": [1, 2], "put": [1, 8, 9, 10, 11, 12, 13, 15], "put_al": [0, 1, 10, 13], "put_if_abs": [1, 13], "putallifabs": 8, "py": 13, "python": [14, 16, 17], "python3": [13, 14], "qualifi": 16, "qualnam": [2, 5], "quantiz": 3, "queri": [0, 1, 2, 3, 7, 10, 13], "query_filt": 15, "query_typ": [1, 2], "queryrecord": 1, "question": 13, "queu": 2, "r": [1, 2, 6, 8, 13], "rais": [1, 5, 12, 13], "random": 15, "randomli": 1, "randomuuid": 16, "rang": [7, 10, 12, 15], "rate": 10, "rather": 8, "ratio": [1, 10], "ration": 1, "re": [1, 8, 16], "read": [1, 16], "readabl": [1, 2], "readi": 1, "ready_timeout_second": 1, "receiv": [1, 5], "recent": 10, "recommend": 13, "reconnect": [1, 13], "record": [1, 2], "recordtyp": [1, 2], "reduc": [1, 2, 8, 10], "refer": [6, 8], "reflect": [1, 2, 6, 7, 8, 10], "reflectionextractor": 7, "regex": [1, 7], "regexfilt": 1, "regist": 1, "registr": 13, "regular": [1, 7], "relai": [6, 7], "relat": 17, "releas": [1, 5, 12, 13], "remain": [1, 5], "remot": [1, 9, 10], "remov": [1, 5, 8, 9, 10, 11, 12, 13], "remove_index": 1, "remove_map": 1, "remove_map_listen": [1, 12], "renam": 16, "replac": [1, 8, 13], "replace_map": [1, 13], "replaceal": 8, "report": [1, 8], "repres": [0, 1, 2, 3, 6, 7, 8, 11, 15, 16], "request": [1, 2, 13, 17], "request_timeout": [1, 2], "request_timeout_in_milli": 2, "request_timeout_second": [1, 17], "requesttimeout": 2, "requir": [1, 2], "reset": 1, "resolut": 1, "resolv": 1, "resourc": [1, 5, 17], "respons": [1, 5, 13, 17], "restrict": [1, 7], "result": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16], "retain": 10, "retriev": [1, 6, 8, 15], "return": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16], "return_curr": [1, 8], "return_valu": [1, 8], "returnvalu": 16, "revers": 4, "review": 13, "right": [6, 7], "roughli": 3, "rpc": 1, "rule": [1, 6], "run": [0, 1, 2, 9, 10, 11, 12, 13, 15], "run_test": 13, "safe": 4, "safeti": [1, 2], "sai": 13, "sam": 0, "same": [1, 2, 3, 6, 8, 10, 16, 17], "satisfi": [1, 8], "save": 16, "scan": 2, "scene": 1, "schedul": 1, "scheduling_prior": [1, 2], "scope": 1, "script": [1, 2, 8], "script_nam": [1, 2], "scriptprocessor": 1, "search": [3, 13], "second": [1, 2, 10, 11, 17], "section": [10, 12], "see": [0, 1, 8, 9, 11, 13, 15, 17], "seed": 10, "select": 1, "self": 16, "semant": 7, "send": [1, 8, 11], "sent": [1, 7], "separ": [1, 2, 6], "sequenc": [1, 2, 6, 7], "sequenti": [6, 8], "ser_format": 1, "serial": [1, 2, 5, 13, 17], "serializ": 16, "serv": 6, "server": [1, 2, 13, 16, 17], "servic": [1, 2], "session": [0, 9, 10, 11, 12, 13, 15], "session_disconnect_second": 1, "session_disconnect_timeout_second": 1, "session_id": 1, "session_opt": 1, "sessionlifecycleev": 1, "set": [0, 1, 2, 3, 6, 7, 8, 10, 11, 16, 17], "setcomplet": 16, "setdescript": 16, "setter": 8, "sever": 10, "short": 7, "should": [1, 2, 5, 6, 7, 8, 12, 16], "shouldn": 16, "show": 17, "shown": [0, 9, 10, 11, 12, 13, 14, 15], "side": [0, 3, 13, 16, 17], "sign": [1, 8], "signifi": 1, "signific": 1, "significantli": [1, 8, 11], "similar": [2, 3], "similarli": 16, "simpi": [1, 8], "simpl": [0, 1, 2, 8, 9, 11, 15, 16], "simplest": 17, "sinc": 1, "singl": [2, 7], "site": 13, "size": [1, 2, 9, 10, 11, 13, 15], "slack": 13, "sleep": 12, "snake": 16, "sname": 8, "so": [1, 2, 6, 10, 17], "sole": 7, "some": [1, 2, 10], "somefilt": 2, "someinternalvalu": 16, "sometim": [0, 15], "somewhat": [2, 16], "soon": 2, "sort": [2, 6], "sourc": [1, 5], "space": 3, "span": 2, "speak": 2, "special": 2, "specif": [1, 8, 12, 17], "specifi": [1, 2, 3, 4, 6, 7, 8, 10], "spent": [1, 10], "split": 2, "sql": [2, 7], "squar": 3, "stale": 10, "standard": [1, 2, 7, 8, 16], "start": [2, 5], "stat": 10, "state": [1, 6, 8], "static": [1, 2, 7, 8], "statist": [1, 10], "statu": 16, "step": [1, 2], "still": 16, "stock": 15, "storag": 5, "store": [0, 1, 2, 9, 10, 11, 13, 15, 16], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17], "string": [1, 2, 3, 6, 7, 8, 13, 16], "strongli": [1, 2], "structur": [1, 9], "submit": 13, "subscrib": 12, "subsequ": 17, "subset": [0, 1, 2, 7, 12], "substr": 16, "successfulli": 1, "suggest": 13, "sum": [1, 2], "sumaggr": 2, "super": [6, 16], "suppli": [1, 8], "support": [0, 1, 8, 11, 12, 13, 15, 17], "synchron": [1, 5], "system": [1, 16], "systemdefault": 16, "t": [0, 1, 2, 3, 6, 7, 8, 10, 15, 16], "take": [1, 7, 8, 11, 16], "target": [1, 6, 8, 10], "task": [2, 10, 16], "task_cach": 10, "task_count": 10, "task_tim": 10, "ten": 11, "tend": [1, 2], "term": 1, "test": [0, 1, 7, 13], "text": 3, "than": [0, 8, 12, 15, 17], "the_map": 8, "thei": [0, 1, 2, 10, 12], "them": [0, 1, 2], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17], "those": [2, 16], "though": 16, "thread": [1, 2], "three": 17, "through": 1, "throw": [6, 7], "thrown": [7, 16], "thu": [1, 10, 16], "time": [1, 2, 8, 10, 12, 16], "time_n": 10, "timeout": [1, 17], "tl": [1, 17], "tls_option": [1, 17], "to_rang": [1, 7], "todo": [7, 16], "top": [1, 2], "topaggreg": 1, "tostr": 16, "total": [1, 10], "total_tim": 10, "touch": [1, 8, 13], "trace": 2, "track": 1, "traffic": [1, 8], "transpar": 1, "transport": 13, "treat": [1, 2, 6], "trigger": [1, 8, 12], "trivial": 6, "true": [1, 5, 7, 8, 16, 17], "truncat": [1, 5, 12, 13], "try": [0, 9, 11, 12, 15], "ttl": [1, 10], "tune": 8, "tupl": [1, 2], "twenti": 15, "two": [1, 2, 3, 13], "type": [0, 1, 2, 5, 6, 7, 8, 11, 13, 15, 16], "typevar": 1, "typic": [1, 17], "u": 13, "undefin": 1, "under": [0, 9, 10, 11, 12, 13, 15], "underli": [1, 2, 6, 8], "underscor": 7, "understood": 16, "union": 13, "uniqu": 2, "unit": 1, "univers": [0, 6, 9, 10, 11, 12, 13, 15], "universalextractor": [2, 7], "unless": [1, 6, 10], "unlik": 1, "unnecessari": [7, 15], "untouch": 5, "up": [2, 3], "upd_del_filt": 12, "updat": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13], "updated_ent": 7, "updated_left": 7, "updated_within": 7, "updater_or_property_nam": [1, 8], "updaterprocessor": 1, "upl": [0, 9, 10, 11, 12, 13, 15], "upper": [1, 7], "us": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17], "usabl": 2, "usag": [8, 13, 16], "use_i": 8, "user": 9, "usual": 5, "util": [0, 1, 6, 11, 15, 16], "uuid": 16, "uuid4": 16, "v": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15], "v1": 13, "valid": 1, "valu": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17], "value_extractor": 8, "valueerror": 1, "valueextractor": [1, 2, 3, 4, 7, 8], "valuemanipul": [1, 8], "valueupdat": [1, 8], "variabl": [1, 7, 17], "variou": [0, 1, 2, 7, 9, 11, 15], "verifi": 10, "versa": 1, "version": [1, 8, 10, 16], "versioned_put": [1, 8], "versioned_put_al": [1, 8], "versionedput": 1, "via": [1, 2, 7, 8, 10, 17], "vice": 1, "view": 1, "visit": 13, "vm": 8, "vulner": 13, "wa": [1, 7, 8, 10, 16], "wai": [2, 7], "wait": [1, 2], "warn": 1, "water": [1, 10], "we": [2, 7, 13], "welcom": 13, "well": [10, 13], "were": [10, 16], "what": [13, 16], "when": [1, 5, 7, 8, 10, 12, 16, 17], "where": [0, 11, 13], "whether": [1, 3, 6, 7, 8], "which": [1, 2, 5, 6, 7, 8, 10, 17], "while": [1, 8], "who": 15, "whole": 0, "whose": [1, 7, 8], "wide": 11, "wildcard": 7, "willing": 2, "wire": 11, "within": [0, 1, 2, 5, 7, 8, 9, 10, 16], "without": [1, 2, 8, 10], "won": 16, "word": 2, "work": [2, 10], "worker": 2, "workspac": 13, "would": [1, 2, 6, 7, 10, 13, 14, 17], "wrap": [1, 2, 8], "written": [1, 2, 8], "x": [7, 10, 12, 13], "xor": 7, "y": 7, "year": 11, "yield": 7, "you": [0, 13, 15, 16, 17], "your": 15, "z": 7, "zero": [1, 6, 7], "zoneid": 16}, "titles": ["Aggregation", "Python Client API Reference for Oracle Coherence", "coherence.aggregator", "coherence.ai [24.09.2+ server required]", "coherence.comparator", "coherence.event", "coherence.extractor", "coherence.filter", "coherence.processor", "The Basics", "Caches", "Entry Processing", "Events", "Python Client for Oracle Coherence", "Installation", "Querying", "Serialization", "Sessions"], "titleterms": {"09": 3, "2": 3, "24": 3, "Near": 10, "The": 9, "abstractcomparableaggreg": 2, "abstractcompositeextractor": 6, "abstractdoubleaggreg": 2, "aggreg": [0, 1, 2], "ai": 3, "allfilt": 7, "alwaysfilt": 7, "andfilt": 7, "anyfilt": 7, "api": 1, "arrayfilt": 7, "averageaggreg": 2, "basic": 9, "betweenfilt": 7, "binaryquantindex": 3, "bitvector": 3, "bytevector": 3, "cach": 10, "cacheopt": 1, "cachestat": 1, "chainedextractor": 6, "client": [1, 13], "cluster": 13, "coher": [1, 2, 3, 4, 5, 6, 7, 8, 13], "compar": [1, 4], "comparisonfilt": 7, "compositeaggreg": 2, "compositeprocessor": 8, "compositeupdat": 6, "conditionalprocessor": 8, "conditionalput": 8, "conditionalputal": 8, "conditionalremov": 8, "containsallfilt": 7, "containsanyfilt": 7, "containsfilt": 7, "contribut": 13, "cosinedist": 3, "countaggreg": 2, "distancealgorithm": 3, "distinctvaluesaggreg": 2, "document": 13, "documentchunk": 3, "entri": 11, "entryaggreg": 2, "entryprocessor": 8, "equalsfilt": 7, "event": [5, 12], "exampl": 13, "extractor": [1, 6], "extractorcompar": 4, "extractorfilt": 7, "extractorprocessor": 8, "featur": 13, "filter": [1, 7], "floatvector": 3, "greaterequalsfilt": 7, "greaterfilt": 7, "groupaggreg": 2, "help": 13, "identityextractor": 6, "indic": 13, "infilt": 7, "innerproductdist": 3, "instal": [13, 14], "inversecompar": 4, "isnonefilt": 7, "isnotnonefilt": 7, "l2squareddist": 3, "lessfilt": 7, "licens": 13, "likefilt": 7, "mapentri": 1, "mapev": [1, 5], "mapeventfilt": 7, "mapeventtyp": 5, "maplifecycleev": 5, "maplisten": [1, 5], "maxaggreg": 2, "methodinvocationprocessor": 8, "minaggreg": 2, "modul": 1, "namedcach": 1, "namedmap": 1, "nearcacheopt": 1, "neverfilt": 7, "notequalsfilt": 7, "notfilt": 7, "nullprocessor": 8, "numberincrementor": 8, "numbermultipli": 8, "option": 1, "oracl": [1, 13], "orfilt": 7, "predicatefilt": 7, "preloadrequest": 8, "presentfilt": 7, "priorityaggreg": 2, "process": 11, "processor": [1, 8], "propertymanipul": 8, "propertyprocessor": 8, "python": [1, 13], "queri": 15, "queryrecord": 2, "queryresult": 3, "reduceraggreg": 2, "refer": 1, "regexfilt": 7, "requir": [3, 13], "safecompar": 4, "schedul": 2, "scriptprocessor": 8, "secur": 13, "serial": 16, "server": 3, "session": [1, 17], "similaritysearch": 3, "start": 13, "sumaggreg": 2, "tabl": 13, "timeout": 2, "tlsoption": 1, "topaggreg": 2, "touchprocessor": 8, "universalextractor": 6, "universalupdat": 6, "updaterprocessor": 8, "valueextractor": 6, "valuemanipul": 6, "valueupdat": 6, "vector": 3, "versionedput": 8, "versionedputal": 8, "xorfilt": 7}})